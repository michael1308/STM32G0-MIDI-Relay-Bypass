ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.cpp"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.cpp"
  18              		.section	.text._ZL12MX_GPIO_Initv,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	_ZL12MX_GPIO_Initv:
  25              		.fnstart
  26              	.LFB395:
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  10:Core/Src/main.cpp ****   * in the root directory of this software component.
  11:Core/Src/main.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  12:Core/Src/main.cpp ****   *
  13:Core/Src/main.cpp ****   ******************************************************************************
  14:Core/Src/main.cpp ****   */
  15:Core/Src/main.cpp **** /* USER CODE END Header */
  16:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  17:Core/Src/main.cpp **** #include "main.h"
  18:Core/Src/main.cpp **** 
  19:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  20:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  21:Core/Src/main.cpp **** #include <stdbool.h>
  22:Core/Src/main.cpp **** #include "MIDI.h"
  23:Core/Src/main.cpp **** #include "serialMIDI.h"
  24:Core/Src/main.cpp **** 
  25:Core/Src/main.cpp **** /* USER CODE END Includes */
  26:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  27:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  28:Core/Src/main.cpp **** 
  29:Core/Src/main.cpp **** /* USER CODE END PTD */
  30:Core/Src/main.cpp **** 
  31:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  32:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 2


  33:Core/Src/main.cpp **** #define HAL_FLASH_MODULE_ENABLED
  34:Core/Src/main.cpp **** #define MIDI_CHANNEL 1
  35:Core/Src/main.cpp **** #define MIDI_CC_CHANNEL_1 80
  36:Core/Src/main.cpp **** #define MIDI_CC_CHANNEL_2 81
  37:Core/Src/main.cpp **** #define ADDR_FLASH_PAGE_20    ((uint32_t)0x0800A000)
  38:Core/Src/main.cpp **** #define ADDR_FLASH_PAGE_31    ((uint32_t)0x0800F800)
  39:Core/Src/main.cpp **** #define ADDR_FLASH_PAGE_1     ((uint32_t)0x08000800)
  40:Core/Src/main.cpp **** /* USER CODE END PD */
  41:Core/Src/main.cpp **** 
  42:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  44:Core/Src/main.cpp **** 
  45:Core/Src/main.cpp **** /* USER CODE END PM */
  46:Core/Src/main.cpp **** 
  47:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.cpp **** 
  49:Core/Src/main.cpp **** UART_HandleTypeDef huart1;
  50:Core/Src/main.cpp **** DMA_HandleTypeDef hdma_usart1_rx; 
  51:Core/Src/main.cpp **** 
  52:Core/Src/main.cpp **** 
  53:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  54:Core/Src/main.cpp **** bool setChannel = 0;
  55:Core/Src/main.cpp **** uint8_t UART1_rxBuffer[1] = {0};
  56:Core/Src/main.cpp **** uint8_t state1 = 0;
  57:Core/Src/main.cpp **** uint8_t state2 = 0;
  58:Core/Src/main.cpp **** uint8_t bTurnOn1 = 0;
  59:Core/Src/main.cpp **** uint8_t bTurnOff1 = 0;
  60:Core/Src/main.cpp **** uint8_t bTurnOn2 = 0;
  61:Core/Src/main.cpp **** uint8_t bTurnOff2 = 0;
  62:Core/Src/main.cpp **** uint8_t isCC = 0;
  63:Core/Src/main.cpp **** uint8_t isCorrectCCChannel1 = 0;
  64:Core/Src/main.cpp **** uint8_t isCorrectCCChannel2 = 0;
  65:Core/Src/main.cpp **** uint32_t channel_write = 9;
  66:Core/Src/main.cpp **** uint32_t channel;
  67:Core/Src/main.cpp **** uint8_t bytes_temp[4];
  68:Core/Src/main.cpp **** uint64_t midi_channel_write;
  69:Core/Src/main.cpp **** uint64_t midi_channel;
  70:Core/Src/main.cpp **** 
  71:Core/Src/main.cpp **** /* USER CODE END PV */
  72:Core/Src/main.cpp **** 
  73:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  74:Core/Src/main.cpp **** void SystemClock_Config(void);
  75:Core/Src/main.cpp **** static void MX_GPIO_Init(void);
  76:Core/Src/main.cpp **** static void MX_DMA_Init(void);
  77:Core/Src/main.cpp **** static void MX_USART1_UART_Init(void);
  78:Core/Src/main.cpp **** bool btnState(GPIO_TypeDef*, uint16_t);
  79:Core/Src/main.cpp **** void displayChannel(int, GPIO_TypeDef*, uint16_t);
  80:Core/Src/main.cpp **** void turnOn(GPIO_TypeDef*, uint16_t, GPIO_TypeDef*, uint16_t, GPIO_TypeDef*, uint16_t);
  81:Core/Src/main.cpp **** void turnOff(GPIO_TypeDef*, uint16_t, GPIO_TypeDef*, uint16_t, GPIO_TypeDef*, uint16_t);
  82:Core/Src/main.cpp **** void Flash_Read_Data (uint32_t, uint32_t*, uint16_t);
  83:Core/Src/main.cpp **** uint32_t Flash_Write_Data (uint32_t, uint32_t*, uint16_t);
  84:Core/Src/main.cpp **** float Bytes2float(uint8_t *);
  85:Core/Src/main.cpp **** void float2Bytes(uint8_t *, float);
  86:Core/Src/main.cpp **** float Flash_Read_NUM (uint32_t);
  87:Core/Src/main.cpp **** void Flash_Write_NUM (uint32_t, float);
  88:Core/Src/main.cpp **** 
  89:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 3


  90:Core/Src/main.cpp **** 
  91:Core/Src/main.cpp **** /* USER CODE END PFP */
  92:Core/Src/main.cpp **** 
  93:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  94:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  95:Core/Src/main.cpp **** 
  96:Core/Src/main.cpp **** /* USER CODE END 0 */
  97:Core/Src/main.cpp **** 
  98:Core/Src/main.cpp **** /**
  99:Core/Src/main.cpp ****   * @brief  The application entry point.
 100:Core/Src/main.cpp ****   * @retval int
 101:Core/Src/main.cpp ****   */
 102:Core/Src/main.cpp **** int main(void)
 103:Core/Src/main.cpp **** {
 104:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 105:Core/Src/main.cpp **** 
 106:Core/Src/main.cpp ****   /* USER CODE END 1 */
 107:Core/Src/main.cpp **** 
 108:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
 109:Core/Src/main.cpp **** 
 110:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Core/Src/main.cpp ****   HAL_Init();
 112:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
 113:Core/Src/main.cpp ****   uint16_t lastPressMillis = 0;
 114:Core/Src/main.cpp ****   /* USER CODE END Init */
 115:Core/Src/main.cpp **** 
 116:Core/Src/main.cpp ****   /* Configure the system clock */
 117:Core/Src/main.cpp ****   SystemClock_Config();
 118:Core/Src/main.cpp **** 
 119:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
 120:Core/Src/main.cpp **** 
 121:Core/Src/main.cpp ****   /* USER CODE END SysInit */
 122:Core/Src/main.cpp **** 
 123:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
 124:Core/Src/main.cpp ****   MX_GPIO_Init();
 125:Core/Src/main.cpp ****   MX_DMA_Init();
 126:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 127:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 128:Core/Src/main.cpp ****   HAL_FLASH_Unlock();
 129:Core/Src/main.cpp ****   //Flash_Write_NUM(ADDR_FLASH_PAGE_20, channel_write);
 130:Core/Src/main.cpp **** 
 131:Core/Src/main.cpp ****   /* Erase Flash Page 31*/
 132:Core/Src/main.cpp ****   FLASH_EraseInitTypeDef FLASH_EraseInitStruct = {0};
 133:Core/Src/main.cpp ****   FLASH_EraseInitStruct.TypeErase = FLASH_TYPEERASE_PAGES;    //Erase type set to erase pages( Avai
 134:Core/Src/main.cpp ****   FLASH_EraseInitStruct.Page = 31;            //Starting address of flash page (0x0800 0000 - 0x080
 135:Core/Src/main.cpp ****   FLASH_EraseInitStruct.NbPages = 1;                    //The number of pages to be erased         
 136:Core/Src/main.cpp ****   uint32_t  errorStatus = 0;
 137:Core/Src/main.cpp ****   //HAL_FLASHEx_Erase(&FLASH_EraseInitStruct,&errorStatus);
 138:Core/Src/main.cpp **** 
 139:Core/Src/main.cpp ****   /* Write Channel to Flash*/
 140:Core/Src/main.cpp ****   //midi_channel_write = 9;
 141:Core/Src/main.cpp ****   //HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,ADDR_FLASH_PAGE_31, channel_write);
 142:Core/Src/main.cpp ****   //HAL_FLASH_Lock();
 143:Core/Src/main.cpp **** 
 144:Core/Src/main.cpp ****   /* Read MIDI Channel from Flash*/
 145:Core/Src/main.cpp ****   uint64_t * RDAddr = (uint64_t *)  ADDR_FLASH_PAGE_31;
 146:Core/Src/main.cpp ****   midi_channel = *RDAddr;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 4


 147:Core/Src/main.cpp ****   
 148:Core/Src/main.cpp ****   //channel = (uint32_t)Flash_Read_NUM(ADDR_FLASH_PAGE_20);
 149:Core/Src/main.cpp ****   //displayChannel(midi_channel, LED1_GPIO_Port, LED1_Pin);
 150:Core/Src/main.cpp **** 
 151:Core/Src/main.cpp ****   if (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3) == GPIO_PIN_SET)
 152:Core/Src/main.cpp ****   {
 153:Core/Src/main.cpp ****     HAL_Delay(3000);
 154:Core/Src/main.cpp ****     if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3) == GPIO_PIN_SET)
 155:Core/Src/main.cpp ****       setChannel = 1;
 156:Core/Src/main.cpp ****     HAL_Delay(3000);
 157:Core/Src/main.cpp ****     displayChannel(midi_channel, LED1_GPIO_Port, LED1_Pin);
 158:Core/Src/main.cpp ****   }
 159:Core/Src/main.cpp ****   while(setChannel)
 160:Core/Src/main.cpp ****   {
 161:Core/Src/main.cpp ****     if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3) == GPIO_PIN_SET)
 162:Core/Src/main.cpp ****     {
 163:Core/Src/main.cpp ****       midi_channel++;
 164:Core/Src/main.cpp ****       if(midi_channel > 16)
 165:Core/Src/main.cpp ****       {
 166:Core/Src/main.cpp ****         midi_channel = 1;
 167:Core/Src/main.cpp ****       }
 168:Core/Src/main.cpp ****       displayChannel(midi_channel, LED1_GPIO_Port, LED1_Pin);
 169:Core/Src/main.cpp ****       lastPressMillis = HAL_GetTick();
 170:Core/Src/main.cpp ****     }
 171:Core/Src/main.cpp ****     if (HAL_GetTick() - lastPressMillis > 20000)
 172:Core/Src/main.cpp ****     {
 173:Core/Src/main.cpp ****       displayChannel(3, LED1_GPIO_Port, LED1_Pin);
 174:Core/Src/main.cpp ****       //FLASH_PageErase(FLASH_BANK_1, ADDR_FLASH_PAGE_20);
 175:Core/Src/main.cpp ****       //HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, ADDR_FLASH_PAGE_20, 5);
 176:Core/Src/main.cpp ****       //HAL_FLASH_Lock();
 177:Core/Src/main.cpp ****       //Flash_Write_Data(ADDR_FLASH_PAGE_20, (uint32_t *)channel, 1);
 178:Core/Src/main.cpp ****       HAL_FLASH_Unlock();
 179:Core/Src/main.cpp ****       HAL_FLASHEx_Erase(&FLASH_EraseInitStruct,&errorStatus);
 180:Core/Src/main.cpp ****       HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,ADDR_FLASH_PAGE_31, midi_channel);
 181:Core/Src/main.cpp ****       HAL_FLASH_Lock();
 182:Core/Src/main.cpp **** 
 183:Core/Src/main.cpp ****       setChannel = 0;
 184:Core/Src/main.cpp ****     }
 185:Core/Src/main.cpp ****   }
 186:Core/Src/main.cpp ****   
 187:Core/Src/main.cpp ****   HAL_UART_Receive_DMA(&huart1, UART1_rxBuffer, 1);
 188:Core/Src/main.cpp ****   /* USER CODE END 2 */
 189:Core/Src/main.cpp ****   /* Infinite loop */
 190:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 191:Core/Src/main.cpp ****   while (1)
 192:Core/Src/main.cpp ****   {
 193:Core/Src/main.cpp ****     if(btnState(SW1_GPIO_Port, SW1_Pin))
 194:Core/Src/main.cpp ****     {
 195:Core/Src/main.cpp ****       if(state1)
 196:Core/Src/main.cpp ****       {
 197:Core/Src/main.cpp ****         turnOff(LED1_GPIO_Port, LED1_Pin, FET1_GPIO_Port, FET1_Pin, RELAY1_GPIO_Port, RELAY1_Pin);
 198:Core/Src/main.cpp ****         state1 = 0;
 199:Core/Src/main.cpp ****       }
 200:Core/Src/main.cpp ****       else
 201:Core/Src/main.cpp ****       {
 202:Core/Src/main.cpp ****         turnOn(LED1_GPIO_Port, LED1_Pin, FET1_GPIO_Port, FET1_Pin, RELAY1_GPIO_Port, RELAY1_Pin);
 203:Core/Src/main.cpp ****         state1 = 1;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 5


 204:Core/Src/main.cpp ****       }
 205:Core/Src/main.cpp ****       bTurnOff1 = 0;
 206:Core/Src/main.cpp ****       bTurnOn1 = 0;
 207:Core/Src/main.cpp ****     }
 208:Core/Src/main.cpp ****     if(bTurnOff1)
 209:Core/Src/main.cpp ****     {
 210:Core/Src/main.cpp ****       if(state1)
 211:Core/Src/main.cpp ****         {
 212:Core/Src/main.cpp ****           turnOff(LED1_GPIO_Port, LED1_Pin, FET1_GPIO_Port, FET1_Pin, RELAY1_GPIO_Port, RELAY1_Pin)
 213:Core/Src/main.cpp ****           state1 = 0;
 214:Core/Src/main.cpp ****         }
 215:Core/Src/main.cpp ****       bTurnOff1 = 0;
 216:Core/Src/main.cpp ****     }
 217:Core/Src/main.cpp ****     if(bTurnOn1)
 218:Core/Src/main.cpp ****     {
 219:Core/Src/main.cpp ****       if(!state1)
 220:Core/Src/main.cpp ****         {
 221:Core/Src/main.cpp ****           turnOn(LED1_GPIO_Port, LED1_Pin, FET1_GPIO_Port, FET1_Pin, RELAY1_GPIO_Port, RELAY1_Pin);
 222:Core/Src/main.cpp ****           state1 = 1;
 223:Core/Src/main.cpp ****         }
 224:Core/Src/main.cpp ****       bTurnOn1 = 0;
 225:Core/Src/main.cpp ****     }
 226:Core/Src/main.cpp **** 
 227:Core/Src/main.cpp ****     if(btnState(SW2_GPIO_Port, SW2_Pin))
 228:Core/Src/main.cpp ****     {
 229:Core/Src/main.cpp ****       if(state2)
 230:Core/Src/main.cpp ****       {
 231:Core/Src/main.cpp ****         turnOff(LED2_GPIO_Port, LED2_Pin, FET2_GPIO_Port, FET2_Pin, RELAY2_GPIO_Port, RELAY2_Pin);
 232:Core/Src/main.cpp ****         state2 = 0;
 233:Core/Src/main.cpp ****       }
 234:Core/Src/main.cpp ****       else
 235:Core/Src/main.cpp ****       {
 236:Core/Src/main.cpp ****         turnOn(LED2_GPIO_Port, LED2_Pin, FET2_GPIO_Port, FET2_Pin, RELAY2_GPIO_Port, RELAY2_Pin);
 237:Core/Src/main.cpp ****         state2 = 1;
 238:Core/Src/main.cpp ****       }
 239:Core/Src/main.cpp ****       bTurnOff2 = 0;
 240:Core/Src/main.cpp ****       bTurnOn2 = 0;
 241:Core/Src/main.cpp ****     }
 242:Core/Src/main.cpp ****     if(bTurnOff2)
 243:Core/Src/main.cpp ****     {
 244:Core/Src/main.cpp ****       if(state2)
 245:Core/Src/main.cpp ****         {
 246:Core/Src/main.cpp ****           turnOff(LED2_GPIO_Port, LED2_Pin, FET2_GPIO_Port, FET2_Pin, RELAY2_GPIO_Port, RELAY2_Pin)
 247:Core/Src/main.cpp ****           state2 = 0;
 248:Core/Src/main.cpp ****         }
 249:Core/Src/main.cpp ****       bTurnOff2 = 0;
 250:Core/Src/main.cpp ****     }
 251:Core/Src/main.cpp ****     if(bTurnOn2)
 252:Core/Src/main.cpp ****     {
 253:Core/Src/main.cpp ****       if(!state2)
 254:Core/Src/main.cpp ****         {
 255:Core/Src/main.cpp ****           turnOn(LED2_GPIO_Port, LED2_Pin, FET2_GPIO_Port, FET2_Pin, RELAY2_GPIO_Port, RELAY2_Pin);
 256:Core/Src/main.cpp ****           state2 = 1;
 257:Core/Src/main.cpp ****         }
 258:Core/Src/main.cpp ****       bTurnOn2 = 0;
 259:Core/Src/main.cpp ****     }
 260:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 6


 261:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 262:Core/Src/main.cpp **** 
 263:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 264:Core/Src/main.cpp ****   }
 265:Core/Src/main.cpp ****   /* USER CODE END 3 */
 266:Core/Src/main.cpp **** }
 267:Core/Src/main.cpp **** 
 268:Core/Src/main.cpp **** /**
 269:Core/Src/main.cpp ****   * @brief System Clock Configuration
 270:Core/Src/main.cpp ****   * @retval None
 271:Core/Src/main.cpp ****   */
 272:Core/Src/main.cpp **** void SystemClock_Config(void)
 273:Core/Src/main.cpp **** {
 274:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 275:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 276:Core/Src/main.cpp **** 
 277:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage
 278:Core/Src/main.cpp ****   */
 279:Core/Src/main.cpp ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 280:Core/Src/main.cpp **** 
 281:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 282:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 283:Core/Src/main.cpp ****   */
 284:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 285:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 286:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 287:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 288:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 289:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 290:Core/Src/main.cpp ****   {
 291:Core/Src/main.cpp ****     Error_Handler();
 292:Core/Src/main.cpp ****   }
 293:Core/Src/main.cpp **** 
 294:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 295:Core/Src/main.cpp ****   */
 296:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 297:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 298:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 299:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 300:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 301:Core/Src/main.cpp **** 
 302:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 303:Core/Src/main.cpp ****   {
 304:Core/Src/main.cpp ****     Error_Handler();
 305:Core/Src/main.cpp ****   }
 306:Core/Src/main.cpp **** }
 307:Core/Src/main.cpp **** 
 308:Core/Src/main.cpp **** /**
 309:Core/Src/main.cpp ****   * @brief USART1 Initialization Function
 310:Core/Src/main.cpp ****   * @param None
 311:Core/Src/main.cpp ****   * @retval None
 312:Core/Src/main.cpp ****   */
 313:Core/Src/main.cpp **** static void MX_USART1_UART_Init(void)
 314:Core/Src/main.cpp **** {
 315:Core/Src/main.cpp **** 
 316:Core/Src/main.cpp ****   /* USER CODE BEGIN USART1_Init 0 */
 317:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 7


 318:Core/Src/main.cpp ****   /* USER CODE END USART1_Init 0 */
 319:Core/Src/main.cpp **** 
 320:Core/Src/main.cpp ****   /* USER CODE BEGIN USART1_Init 1 */
 321:Core/Src/main.cpp **** 
 322:Core/Src/main.cpp ****   /* USER CODE END USART1_Init 1 */
 323:Core/Src/main.cpp ****   huart1.Instance = USART1;
 324:Core/Src/main.cpp ****   huart1.Init.BaudRate = 31250;
 325:Core/Src/main.cpp ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 326:Core/Src/main.cpp ****   huart1.Init.StopBits = UART_STOPBITS_1;
 327:Core/Src/main.cpp ****   huart1.Init.Parity = UART_PARITY_NONE;
 328:Core/Src/main.cpp ****   huart1.Init.Mode = UART_MODE_TX_RX;
 329:Core/Src/main.cpp ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 330:Core/Src/main.cpp ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 331:Core/Src/main.cpp ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 332:Core/Src/main.cpp ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 333:Core/Src/main.cpp ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 334:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 335:Core/Src/main.cpp ****   {
 336:Core/Src/main.cpp ****     Error_Handler();
 337:Core/Src/main.cpp ****   }
 338:Core/Src/main.cpp ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 339:Core/Src/main.cpp ****   {
 340:Core/Src/main.cpp ****     Error_Handler();
 341:Core/Src/main.cpp ****   }
 342:Core/Src/main.cpp ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 343:Core/Src/main.cpp ****   {
 344:Core/Src/main.cpp ****     Error_Handler();
 345:Core/Src/main.cpp ****   }
 346:Core/Src/main.cpp ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 347:Core/Src/main.cpp ****   {
 348:Core/Src/main.cpp ****     Error_Handler();
 349:Core/Src/main.cpp ****   }
 350:Core/Src/main.cpp ****   /* USER CODE BEGIN USART1_Init 2 */
 351:Core/Src/main.cpp **** 
 352:Core/Src/main.cpp ****   /* USER CODE END USART1_Init 2 */
 353:Core/Src/main.cpp **** 
 354:Core/Src/main.cpp **** }
 355:Core/Src/main.cpp **** 
 356:Core/Src/main.cpp **** /**
 357:Core/Src/main.cpp ****   * Enable DMA controller clock
 358:Core/Src/main.cpp ****   */
 359:Core/Src/main.cpp **** static void MX_DMA_Init(void)
 360:Core/Src/main.cpp **** {
 361:Core/Src/main.cpp **** 
 362:Core/Src/main.cpp ****   /* DMA controller clock enable */
 363:Core/Src/main.cpp ****   __HAL_RCC_DMA1_CLK_ENABLE();
 364:Core/Src/main.cpp **** 
 365:Core/Src/main.cpp ****   /* DMA interrupt init */
 366:Core/Src/main.cpp ****   /* DMA1_Channel1_IRQn interrupt configuration */
 367:Core/Src/main.cpp ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 368:Core/Src/main.cpp ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 369:Core/Src/main.cpp **** 
 370:Core/Src/main.cpp **** }
 371:Core/Src/main.cpp **** 
 372:Core/Src/main.cpp **** /**
 373:Core/Src/main.cpp ****   * @brief GPIO Initialization Function
 374:Core/Src/main.cpp ****   * @param None
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 8


 375:Core/Src/main.cpp ****   * @retval None
 376:Core/Src/main.cpp ****   */
 377:Core/Src/main.cpp **** static void MX_GPIO_Init(void)
 378:Core/Src/main.cpp **** {
  27              		.loc 1 378 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 32
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.save {r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38              		.pad #36
  39 0002 89B0     		sub	sp, sp, #36
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
 379:Core/Src/main.cpp ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 379 3 view .LVU1
  43              		.loc 1 379 20 is_stmt 0 view .LVU2
  44 0004 1422     		movs	r2, #20
  45 0006 0021     		movs	r1, #0
  46 0008 03A8     		add	r0, sp, #12
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 380:Core/Src/main.cpp **** 
 381:Core/Src/main.cpp ****   /* GPIO Ports Clock Enable */
 382:Core/Src/main.cpp ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  49              		.loc 1 382 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 382 3 view .LVU4
  52              		.loc 1 382 3 view .LVU5
  53 000e 164B     		ldr	r3, .L2
  54 0010 596B     		ldr	r1, [r3, #52]
  55 0012 0222     		movs	r2, #2
  56 0014 1143     		orrs	r1, r2
  57 0016 5963     		str	r1, [r3, #52]
  58              		.loc 1 382 3 view .LVU6
  59 0018 596B     		ldr	r1, [r3, #52]
  60 001a 0A40     		ands	r2, r1
  61 001c 0192     		str	r2, [sp, #4]
  62              		.loc 1 382 3 view .LVU7
  63 001e 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 382 3 view .LVU8
 383:Core/Src/main.cpp ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 383 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 383 3 view .LVU10
  69              		.loc 1 383 3 view .LVU11
  70 0020 5A6B     		ldr	r2, [r3, #52]
  71 0022 0124     		movs	r4, #1
  72 0024 2243     		orrs	r2, r4
  73 0026 5A63     		str	r2, [r3, #52]
  74              		.loc 1 383 3 view .LVU12
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 9


  75 0028 5B6B     		ldr	r3, [r3, #52]
  76 002a 2340     		ands	r3, r4
  77 002c 0293     		str	r3, [sp, #8]
  78              		.loc 1 383 3 view .LVU13
  79 002e 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 383 3 view .LVU14
 384:Core/Src/main.cpp **** 
 385:Core/Src/main.cpp ****   /*Configure GPIO pin Output Level */
 386:Core/Src/main.cpp ****   HAL_GPIO_WritePin(GPIOA, RELAY2_Pin|LED1_Pin|LED2_Pin|FET1_Pin
  82              		.loc 1 386 3 view .LVU15
  83              		.loc 1 386 20 is_stmt 0 view .LVU16
  84 0030 A025     		movs	r5, #160
  85 0032 ED05     		lsls	r5, r5, #23
  86 0034 0022     		movs	r2, #0
  87 0036 E721     		movs	r1, #231
  88 0038 2800     		movs	r0, r5
  89 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
  90              	.LVL1:
 387:Core/Src/main.cpp ****                           |FET2_Pin|RELAY1_Pin, GPIO_PIN_RESET);
 388:Core/Src/main.cpp **** 
 389:Core/Src/main.cpp ****   /*Configure GPIO pins : RELAY2_Pin LED1_Pin LED2_Pin FET1_Pin
 390:Core/Src/main.cpp ****                            FET2_Pin RELAY1_Pin */
 391:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = RELAY2_Pin|LED1_Pin|LED2_Pin|FET1_Pin
  91              		.loc 1 391 3 is_stmt 1 view .LVU17
  92              		.loc 1 391 23 is_stmt 0 view .LVU18
  93 003e E723     		movs	r3, #231
  94 0040 0393     		str	r3, [sp, #12]
 392:Core/Src/main.cpp ****                           |FET2_Pin|RELAY1_Pin;
 393:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  95              		.loc 1 393 3 is_stmt 1 view .LVU19
  96              		.loc 1 393 24 is_stmt 0 view .LVU20
  97 0042 0494     		str	r4, [sp, #16]
 394:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  98              		.loc 1 394 3 is_stmt 1 view .LVU21
  99              		.loc 1 394 24 is_stmt 0 view .LVU22
 100 0044 0024     		movs	r4, #0
 101 0046 0594     		str	r4, [sp, #20]
 395:Core/Src/main.cpp ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 102              		.loc 1 395 3 is_stmt 1 view .LVU23
 103              		.loc 1 395 25 is_stmt 0 view .LVU24
 104 0048 0694     		str	r4, [sp, #24]
 396:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105              		.loc 1 396 3 is_stmt 1 view .LVU25
 106              		.loc 1 396 16 is_stmt 0 view .LVU26
 107 004a 03A9     		add	r1, sp, #12
 108 004c 2800     		movs	r0, r5
 109 004e FFF7FEFF 		bl	HAL_GPIO_Init
 110              	.LVL2:
 397:Core/Src/main.cpp **** 
 398:Core/Src/main.cpp ****   /*Configure GPIO pins : SW1_Pin SW2_Pin */
 399:Core/Src/main.cpp ****   GPIO_InitStruct.Pin = SW1_Pin|SW2_Pin;
 111              		.loc 1 399 3 is_stmt 1 view .LVU27
 112              		.loc 1 399 23 is_stmt 0 view .LVU28
 113 0052 1823     		movs	r3, #24
 114 0054 0393     		str	r3, [sp, #12]
 400:Core/Src/main.cpp ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 10


 115              		.loc 1 400 3 is_stmt 1 view .LVU29
 116              		.loc 1 400 24 is_stmt 0 view .LVU30
 117 0056 0494     		str	r4, [sp, #16]
 401:Core/Src/main.cpp ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 118              		.loc 1 401 3 is_stmt 1 view .LVU31
 119              		.loc 1 401 24 is_stmt 0 view .LVU32
 120 0058 0594     		str	r4, [sp, #20]
 402:Core/Src/main.cpp ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 121              		.loc 1 402 3 is_stmt 1 view .LVU33
 122              		.loc 1 402 16 is_stmt 0 view .LVU34
 123 005a 03A9     		add	r1, sp, #12
 124 005c 2800     		movs	r0, r5
 125 005e FFF7FEFF 		bl	HAL_GPIO_Init
 126              	.LVL3:
 403:Core/Src/main.cpp **** 
 404:Core/Src/main.cpp **** }
 127              		.loc 1 404 1 view .LVU35
 128 0062 09B0     		add	sp, sp, #36
 129              		@ sp needed
 130 0064 30BD     		pop	{r4, r5, pc}
 131              	.L3:
 132 0066 C046     		.align	2
 133              	.L2:
 134 0068 00100240 		.word	1073876992
 135              		.cfi_endproc
 136              	.LFE395:
 137              		.fnend
 139              		.section	.text._ZL11MX_DMA_Initv,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	_ZL11MX_DMA_Initv:
 146              		.fnstart
 147              	.LFB394:
 360:Core/Src/main.cpp **** 
 148              		.loc 1 360 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 8
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 00B5     		push	{lr}
 153              		.save {lr}
 154              	.LCFI2:
 155              		.cfi_def_cfa_offset 4
 156              		.cfi_offset 14, -4
 157              		.pad #12
 158 0002 83B0     		sub	sp, sp, #12
 159              	.LCFI3:
 160              		.cfi_def_cfa_offset 16
 363:Core/Src/main.cpp **** 
 161              		.loc 1 363 3 view .LVU37
 162              	.LBB6:
 363:Core/Src/main.cpp **** 
 163              		.loc 1 363 3 view .LVU38
 363:Core/Src/main.cpp **** 
 164              		.loc 1 363 3 view .LVU39
 165 0004 094A     		ldr	r2, .L5
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 11


 166 0006 916B     		ldr	r1, [r2, #56]
 167 0008 0123     		movs	r3, #1
 168 000a 1943     		orrs	r1, r3
 169 000c 9163     		str	r1, [r2, #56]
 363:Core/Src/main.cpp **** 
 170              		.loc 1 363 3 view .LVU40
 171 000e 926B     		ldr	r2, [r2, #56]
 172 0010 1340     		ands	r3, r2
 173 0012 0193     		str	r3, [sp, #4]
 363:Core/Src/main.cpp **** 
 174              		.loc 1 363 3 view .LVU41
 175 0014 019B     		ldr	r3, [sp, #4]
 176              	.LBE6:
 363:Core/Src/main.cpp **** 
 177              		.loc 1 363 3 view .LVU42
 367:Core/Src/main.cpp ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 178              		.loc 1 367 3 view .LVU43
 367:Core/Src/main.cpp ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 179              		.loc 1 367 23 is_stmt 0 view .LVU44
 180 0016 0022     		movs	r2, #0
 181 0018 0021     		movs	r1, #0
 182 001a 0920     		movs	r0, #9
 183 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 184              	.LVL4:
 368:Core/Src/main.cpp **** 
 185              		.loc 1 368 3 is_stmt 1 view .LVU45
 368:Core/Src/main.cpp **** 
 186              		.loc 1 368 21 is_stmt 0 view .LVU46
 187 0020 0920     		movs	r0, #9
 188 0022 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 189              	.LVL5:
 370:Core/Src/main.cpp **** 
 190              		.loc 1 370 1 view .LVU47
 191 0026 03B0     		add	sp, sp, #12
 192              		@ sp needed
 193 0028 00BD     		pop	{pc}
 194              	.L6:
 195 002a C046     		.align	2
 196              	.L5:
 197 002c 00100240 		.word	1073876992
 198              		.cfi_endproc
 199              	.LFE394:
 200              		.fnend
 202              		.section	.text._Z6turnOnP12GPIO_TypeDeftS0_tS0_t,"ax",%progbits
 203              		.align	1
 204              		.global	_Z6turnOnP12GPIO_TypeDeftS0_tS0_t
 205              		.syntax unified
 206              		.code	16
 207              		.thumb_func
 209              	_Z6turnOnP12GPIO_TypeDeftS0_tS0_t:
 210              		.fnstart
 211              	.LVL6:
 212              	.LFB396:
 405:Core/Src/main.cpp **** 
 406:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 407:Core/Src/main.cpp **** 
 408:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 12


 409:Core/Src/main.cpp **** void turnOn(GPIO_TypeDef *LED_GPIO_Port, uint16_t LED_Pin, GPIO_TypeDef *FET_GPIO_Port, uint16_t FE
 410:Core/Src/main.cpp **** {
 213              		.loc 1 410 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 8, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              		.loc 1 410 1 is_stmt 0 view .LVU49
 218 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 219              		.save {r3, r4, r5, r6, r7, lr}
 220              	.LCFI4:
 221              		.cfi_def_cfa_offset 24
 222              		.cfi_offset 3, -24
 223              		.cfi_offset 4, -20
 224              		.cfi_offset 5, -16
 225              		.cfi_offset 6, -12
 226              		.cfi_offset 7, -8
 227              		.cfi_offset 14, -4
 228 0002 CE46     		mov	lr, r9
 229 0004 4746     		mov	r7, r8
 230 0006 80B5     		push	{r7, lr}
 231              		.save {r8, r9}
 232              	.LCFI5:
 233              		.cfi_def_cfa_offset 32
 234              		.cfi_offset 8, -32
 235              		.cfi_offset 9, -28
 236 0008 0600     		movs	r6, r0
 237 000a 0F00     		movs	r7, r1
 238 000c 1400     		movs	r4, r2
 239 000e 1D00     		movs	r5, r3
 240 0010 08AB     		add	r3, sp, #32
 241              	.LVL7:
 242              		.loc 1 410 1 view .LVU50
 243 0012 04CB     		ldmia	r3!, {r2}
 244              	.LVL8:
 245              		.loc 1 410 1 view .LVU51
 246 0014 9046     		mov	r8, r2
 247 0016 1B88     		ldrh	r3, [r3]
 248              	.LVL9:
 249              		.loc 1 410 1 view .LVU52
 250 0018 9946     		mov	r9, r3
 411:Core/Src/main.cpp ****   HAL_GPIO_WritePin(FET_GPIO_Port, FET_Pin, GPIO_PIN_SET);
 251              		.loc 1 411 3 is_stmt 1 view .LVU53
 252              		.loc 1 411 20 is_stmt 0 view .LVU54
 253 001a 0122     		movs	r2, #1
 254 001c 2900     		movs	r1, r5
 255              	.LVL10:
 256              		.loc 1 411 20 view .LVU55
 257 001e 2000     		movs	r0, r4
 258              	.LVL11:
 259              		.loc 1 411 20 view .LVU56
 260 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 261              	.LVL12:
 412:Core/Src/main.cpp ****   HAL_Delay(20);
 262              		.loc 1 412 3 is_stmt 1 view .LVU57
 263              		.loc 1 412 12 is_stmt 0 view .LVU58
 264 0024 1420     		movs	r0, #20
 265 0026 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 13


 266              	.LVL13:
 413:Core/Src/main.cpp ****   HAL_GPIO_WritePin(RELAY_GPIO_Port, RELAY_Pin, GPIO_PIN_SET);
 267              		.loc 1 413 3 is_stmt 1 view .LVU59
 268              		.loc 1 413 20 is_stmt 0 view .LVU60
 269 002a 0122     		movs	r2, #1
 270 002c 4946     		mov	r1, r9
 271 002e 4046     		mov	r0, r8
 272 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 273              	.LVL14:
 414:Core/Src/main.cpp ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 274              		.loc 1 414 3 is_stmt 1 view .LVU61
 275              		.loc 1 414 20 is_stmt 0 view .LVU62
 276 0034 0122     		movs	r2, #1
 277 0036 3900     		movs	r1, r7
 278 0038 3000     		movs	r0, r6
 279 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 280              	.LVL15:
 415:Core/Src/main.cpp ****   HAL_Delay(20);
 281              		.loc 1 415 3 is_stmt 1 view .LVU63
 282              		.loc 1 415 12 is_stmt 0 view .LVU64
 283 003e 1420     		movs	r0, #20
 284 0040 FFF7FEFF 		bl	HAL_Delay
 285              	.LVL16:
 416:Core/Src/main.cpp ****   HAL_GPIO_WritePin(FET_GPIO_Port, FET_Pin, GPIO_PIN_RESET);
 286              		.loc 1 416 3 is_stmt 1 view .LVU65
 287              		.loc 1 416 20 is_stmt 0 view .LVU66
 288 0044 0022     		movs	r2, #0
 289 0046 2900     		movs	r1, r5
 290 0048 2000     		movs	r0, r4
 291 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 292              	.LVL17:
 417:Core/Src/main.cpp **** }
 293              		.loc 1 417 1 view .LVU67
 294              		@ sp needed
 295              	.LVL18:
 296              	.LVL19:
 297              		.loc 1 417 1 view .LVU68
 298 004e C0BC     		pop	{r6, r7}
 299 0050 B946     		mov	r9, r7
 300 0052 B046     		mov	r8, r6
 301 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 302              		.cfi_endproc
 303              	.LFE396:
 304              		.fnend
 306              		.section	.text._Z7turnOffP12GPIO_TypeDeftS0_tS0_t,"ax",%progbits
 307              		.align	1
 308              		.global	_Z7turnOffP12GPIO_TypeDeftS0_tS0_t
 309              		.syntax unified
 310              		.code	16
 311              		.thumb_func
 313              	_Z7turnOffP12GPIO_TypeDeftS0_tS0_t:
 314              		.fnstart
 315              	.LVL20:
 316              	.LFB397:
 418:Core/Src/main.cpp **** 
 419:Core/Src/main.cpp **** void turnOff(GPIO_TypeDef *LED_GPIO_Port, uint16_t LED_Pin, GPIO_TypeDef *FET_GPIO_Port, uint16_t F
 420:Core/Src/main.cpp **** {
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 14


 317              		.loc 1 420 1 is_stmt 1 view -0
 318              		.cfi_startproc
 319              		@ args = 8, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		.loc 1 420 1 is_stmt 0 view .LVU70
 322 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 323              		.save {r3, r4, r5, r6, r7, lr}
 324              	.LCFI6:
 325              		.cfi_def_cfa_offset 24
 326              		.cfi_offset 3, -24
 327              		.cfi_offset 4, -20
 328              		.cfi_offset 5, -16
 329              		.cfi_offset 6, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 CE46     		mov	lr, r9
 333 0004 4746     		mov	r7, r8
 334 0006 80B5     		push	{r7, lr}
 335              		.save {r8, r9}
 336              	.LCFI7:
 337              		.cfi_def_cfa_offset 32
 338              		.cfi_offset 8, -32
 339              		.cfi_offset 9, -28
 340 0008 0600     		movs	r6, r0
 341 000a 0F00     		movs	r7, r1
 342 000c 1400     		movs	r4, r2
 343 000e 1D00     		movs	r5, r3
 344 0010 08AB     		add	r3, sp, #32
 345              	.LVL21:
 346              		.loc 1 420 1 view .LVU71
 347 0012 04CB     		ldmia	r3!, {r2}
 348              	.LVL22:
 349              		.loc 1 420 1 view .LVU72
 350 0014 9046     		mov	r8, r2
 351 0016 1B88     		ldrh	r3, [r3]
 352              	.LVL23:
 353              		.loc 1 420 1 view .LVU73
 354 0018 9946     		mov	r9, r3
 421:Core/Src/main.cpp ****   HAL_GPIO_WritePin(FET_GPIO_Port, FET_Pin, GPIO_PIN_SET);
 355              		.loc 1 421 3 is_stmt 1 view .LVU74
 356              		.loc 1 421 20 is_stmt 0 view .LVU75
 357 001a 0122     		movs	r2, #1
 358 001c 2900     		movs	r1, r5
 359              	.LVL24:
 360              		.loc 1 421 20 view .LVU76
 361 001e 2000     		movs	r0, r4
 362              	.LVL25:
 363              		.loc 1 421 20 view .LVU77
 364 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 365              	.LVL26:
 422:Core/Src/main.cpp ****   HAL_Delay(20);
 366              		.loc 1 422 3 is_stmt 1 view .LVU78
 367              		.loc 1 422 12 is_stmt 0 view .LVU79
 368 0024 1420     		movs	r0, #20
 369 0026 FFF7FEFF 		bl	HAL_Delay
 370              	.LVL27:
 423:Core/Src/main.cpp ****   HAL_GPIO_WritePin(RELAY_GPIO_Port, RELAY_Pin, GPIO_PIN_RESET);
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 15


 371              		.loc 1 423 3 is_stmt 1 view .LVU80
 372              		.loc 1 423 20 is_stmt 0 view .LVU81
 373 002a 0022     		movs	r2, #0
 374 002c 4946     		mov	r1, r9
 375 002e 4046     		mov	r0, r8
 376 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
 377              	.LVL28:
 424:Core/Src/main.cpp ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 378              		.loc 1 424 3 is_stmt 1 view .LVU82
 379              		.loc 1 424 20 is_stmt 0 view .LVU83
 380 0034 0022     		movs	r2, #0
 381 0036 3900     		movs	r1, r7
 382 0038 3000     		movs	r0, r6
 383 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 384              	.LVL29:
 425:Core/Src/main.cpp ****   HAL_Delay(20);
 385              		.loc 1 425 3 is_stmt 1 view .LVU84
 386              		.loc 1 425 12 is_stmt 0 view .LVU85
 387 003e 1420     		movs	r0, #20
 388 0040 FFF7FEFF 		bl	HAL_Delay
 389              	.LVL30:
 426:Core/Src/main.cpp ****   HAL_GPIO_WritePin(FET_GPIO_Port, FET_Pin, GPIO_PIN_RESET);
 390              		.loc 1 426 3 is_stmt 1 view .LVU86
 391              		.loc 1 426 20 is_stmt 0 view .LVU87
 392 0044 0022     		movs	r2, #0
 393 0046 2900     		movs	r1, r5
 394 0048 2000     		movs	r0, r4
 395 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 396              	.LVL31:
 427:Core/Src/main.cpp **** }
 397              		.loc 1 427 1 view .LVU88
 398              		@ sp needed
 399              	.LVL32:
 400              	.LVL33:
 401              		.loc 1 427 1 view .LVU89
 402 004e C0BC     		pop	{r6, r7}
 403 0050 B946     		mov	r9, r7
 404 0052 B046     		mov	r8, r6
 405 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 406              		.cfi_endproc
 407              	.LFE397:
 408              		.fnend
 410              		.section	.text._Z14displayChanneliP12GPIO_TypeDeft,"ax",%progbits
 411              		.align	1
 412              		.global	_Z14displayChanneliP12GPIO_TypeDeft
 413              		.syntax unified
 414              		.code	16
 415              		.thumb_func
 417              	_Z14displayChanneliP12GPIO_TypeDeft:
 418              		.fnstart
 419              	.LVL34:
 420              	.LFB398:
 428:Core/Src/main.cpp **** 
 429:Core/Src/main.cpp **** void displayChannel(int channel, GPIO_TypeDef *LED_GPIO_Port, uint16_t LED_Pin)
 430:Core/Src/main.cpp **** {
 421              		.loc 1 430 1 is_stmt 1 view -0
 422              		.cfi_startproc
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 16


 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		.loc 1 430 1 is_stmt 0 view .LVU91
 426 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 427              		.save {r3, r4, r5, r6, r7, lr}
 428              	.LCFI8:
 429              		.cfi_def_cfa_offset 24
 430              		.cfi_offset 3, -24
 431              		.cfi_offset 4, -20
 432              		.cfi_offset 5, -16
 433              		.cfi_offset 6, -12
 434              		.cfi_offset 7, -8
 435              		.cfi_offset 14, -4
 436 0002 0700     		movs	r7, r0
 437 0004 0E00     		movs	r6, r1
 438 0006 1500     		movs	r5, r2
 431:Core/Src/main.cpp ****   for (int i = 0; i < channel; i++)
 439              		.loc 1 431 3 is_stmt 1 view .LVU92
 440              	.LVL35:
 441              	.LBB7:
 442              		.loc 1 431 12 is_stmt 0 view .LVU93
 443 0008 0024     		movs	r4, #0
 444              		.loc 1 431 3 view .LVU94
 445 000a 10E0     		b	.L10
 446              	.LVL36:
 447              	.L11:
 432:Core/Src/main.cpp ****   {
 433:Core/Src/main.cpp ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 448              		.loc 1 433 5 is_stmt 1 discriminator 3 view .LVU95
 449              		.loc 1 433 22 is_stmt 0 discriminator 3 view .LVU96
 450 000c 0122     		movs	r2, #1
 451 000e 2900     		movs	r1, r5
 452 0010 3000     		movs	r0, r6
 453 0012 FFF7FEFF 		bl	HAL_GPIO_WritePin
 454              	.LVL37:
 434:Core/Src/main.cpp ****     HAL_Delay(250);
 455              		.loc 1 434 5 is_stmt 1 discriminator 3 view .LVU97
 456              		.loc 1 434 14 is_stmt 0 discriminator 3 view .LVU98
 457 0016 FA20     		movs	r0, #250
 458 0018 FFF7FEFF 		bl	HAL_Delay
 459              	.LVL38:
 435:Core/Src/main.cpp ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 460              		.loc 1 435 5 is_stmt 1 discriminator 3 view .LVU99
 461              		.loc 1 435 22 is_stmt 0 discriminator 3 view .LVU100
 462 001c 0022     		movs	r2, #0
 463 001e 2900     		movs	r1, r5
 464 0020 3000     		movs	r0, r6
 465 0022 FFF7FEFF 		bl	HAL_GPIO_WritePin
 466              	.LVL39:
 436:Core/Src/main.cpp ****     HAL_Delay(250);
 467              		.loc 1 436 5 is_stmt 1 discriminator 3 view .LVU101
 468              		.loc 1 436 14 is_stmt 0 discriminator 3 view .LVU102
 469 0026 FA20     		movs	r0, #250
 470 0028 FFF7FEFF 		bl	HAL_Delay
 471              	.LVL40:
 431:Core/Src/main.cpp ****   {
 472              		.loc 1 431 3 is_stmt 1 discriminator 3 view .LVU103
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 17


 473 002c 0134     		adds	r4, r4, #1
 474              	.LVL41:
 475              	.L10:
 431:Core/Src/main.cpp ****   {
 476              		.loc 1 431 21 discriminator 1 view .LVU104
 477 002e BC42     		cmp	r4, r7
 478 0030 ECDB     		blt	.L11
 479              	.LBE7:
 437:Core/Src/main.cpp ****   }
 438:Core/Src/main.cpp **** }
 480              		.loc 1 438 1 is_stmt 0 view .LVU105
 481              		@ sp needed
 482              	.LVL42:
 483              	.LVL43:
 484              	.LVL44:
 485              		.loc 1 438 1 view .LVU106
 486 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 487              		.cfi_endproc
 488              	.LFE398:
 489              		.fnend
 491              		.section	.text._Z8btnStateP12GPIO_TypeDeft,"ax",%progbits
 492              		.align	1
 493              		.global	_Z8btnStateP12GPIO_TypeDeft
 494              		.syntax unified
 495              		.code	16
 496              		.thumb_func
 498              	_Z8btnStateP12GPIO_TypeDeft:
 499              		.fnstart
 500              	.LVL45:
 501              	.LFB399:
 439:Core/Src/main.cpp **** 
 440:Core/Src/main.cpp **** bool btnState(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
 441:Core/Src/main.cpp **** {
 502              		.loc 1 441 1 is_stmt 1 view -0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              		.loc 1 441 1 is_stmt 0 view .LVU108
 507 0000 70B5     		push	{r4, r5, r6, lr}
 508              		.save {r4, r5, r6, lr}
 509              	.LCFI9:
 510              		.cfi_def_cfa_offset 16
 511              		.cfi_offset 4, -16
 512              		.cfi_offset 5, -12
 513              		.cfi_offset 6, -8
 514              		.cfi_offset 14, -4
 442:Core/Src/main.cpp ****   static uint16_t state = 0;
 515              		.loc 1 442 3 is_stmt 1 view .LVU109
 443:Core/Src/main.cpp ****   state = (state<<1) | (HAL_GPIO_ReadPin(GPIOx, GPIO_Pin) == GPIO_PIN_SET) | 0xfe00;
 516              		.loc 1 443 3 view .LVU110
 517              		.loc 1 443 12 is_stmt 0 view .LVU111
 518 0002 0A4C     		ldr	r4, .L13
 519 0004 2588     		ldrh	r5, [r4]
 520              		.loc 1 443 17 view .LVU112
 521 0006 6D00     		lsls	r5, r5, #1
 522              		.loc 1 443 41 view .LVU113
 523 0008 FFF7FEFF 		bl	HAL_GPIO_ReadPin
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 18


 524              	.LVL46:
 525              		.loc 1 443 59 view .LVU114
 526 000c 431E     		subs	r3, r0, #1
 527 000e 5A42     		rsbs	r2, r3, #0
 528 0010 5341     		adcs	r3, r3, r2
 529              		.loc 1 443 22 view .LVU115
 530 0012 2B43     		orrs	r3, r5
 531 0014 1BB2     		sxth	r3, r3
 532              		.loc 1 443 76 view .LVU116
 533 0016 0648     		ldr	r0, .L13+4
 534 0018 1843     		orrs	r0, r3
 535 001a 80B2     		uxth	r0, r0
 536              		.loc 1 443 9 view .LVU117
 537 001c 2080     		strh	r0, [r4]
 444:Core/Src/main.cpp ****   return (state == 0xff00);
 538              		.loc 1 444 3 is_stmt 1 view .LVU118
 539              		.loc 1 444 26 is_stmt 0 view .LVU119
 540 001e 054B     		ldr	r3, .L13+8
 541 0020 9C46     		mov	ip, r3
 542 0022 6044     		add	r0, r0, ip
 543 0024 4342     		rsbs	r3, r0, #0
 544 0026 5841     		adcs	r0, r0, r3
 545 0028 C0B2     		uxtb	r0, r0
 445:Core/Src/main.cpp **** }
 546              		.loc 1 445 1 view .LVU120
 547              		@ sp needed
 548 002a 70BD     		pop	{r4, r5, r6, pc}
 549              	.L14:
 550              		.align	2
 551              	.L13:
 552 002c 00000000 		.word	_ZZ8btnStateP12GPIO_TypeDeftE5state
 553 0030 00FEFFFF 		.word	-512
 554 0034 0001FFFF 		.word	-65280
 555              		.cfi_endproc
 556              	.LFE399:
 557              		.fnend
 559              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 560              		.align	1
 561              		.global	HAL_UART_RxCpltCallback
 562              		.syntax unified
 563              		.code	16
 564              		.thumb_func
 566              	HAL_UART_RxCpltCallback:
 567              		.fnstart
 568              	.LVL47:
 569              	.LFB400:
 446:Core/Src/main.cpp **** 
 447:Core/Src/main.cpp **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 448:Core/Src/main.cpp **** {
 570              		.loc 1 448 1 is_stmt 1 view -0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 0, uses_anonymous_args = 0
 574              		.loc 1 448 1 is_stmt 0 view .LVU122
 575 0000 10B5     		push	{r4, lr}
 576              		.save {r4, lr}
 577              	.LCFI10:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 19


 578              		.cfi_def_cfa_offset 8
 579              		.cfi_offset 4, -8
 580              		.cfi_offset 14, -4
 449:Core/Src/main.cpp ****   // HAL_UART_Transmit(&huart1, UART1_rxBuffer, 12, 100);
 450:Core/Src/main.cpp ****   if(UART1_rxBuffer[0] == 0xB0)
 581              		.loc 1 450 3 is_stmt 1 view .LVU123
 582              		.loc 1 450 22 is_stmt 0 view .LVU124
 583 0002 2E4B     		ldr	r3, .L27
 584 0004 1B78     		ldrb	r3, [r3]
 585              		.loc 1 450 3 view .LVU125
 586 0006 B02B     		cmp	r3, #176
 587 0008 14D0     		beq	.L24
 451:Core/Src/main.cpp ****     isCC = 1;
 452:Core/Src/main.cpp ****   else if(isCC == 1 && UART1_rxBuffer[0] == MIDI_CC_CHANNEL_1)
 588              		.loc 1 452 8 is_stmt 1 view .LVU126
 589              		.loc 1 452 16 is_stmt 0 view .LVU127
 590 000a 2D4A     		ldr	r2, .L27+4
 591 000c 1278     		ldrb	r2, [r2]
 592              		.loc 1 452 8 view .LVU128
 593 000e 012A     		cmp	r2, #1
 594 0010 19D0     		beq	.L25
 595              	.L18:
 453:Core/Src/main.cpp ****     isCorrectCCChannel1 = 1;
 454:Core/Src/main.cpp ****   else if(isCC == 1 && UART1_rxBuffer[0] == MIDI_CC_CHANNEL_2)
 596              		.loc 1 454 8 is_stmt 1 view .LVU129
 597 0012 012A     		cmp	r2, #1
 598 0014 1CD0     		beq	.L26
 599              	.L19:
 455:Core/Src/main.cpp ****     isCorrectCCChannel2 = 1;
 456:Core/Src/main.cpp ****   else if(isCorrectCCChannel1 && UART1_rxBuffer[0] >= 0x40)
 600              		.loc 1 456 8 view .LVU130
 601              		.loc 1 456 11 is_stmt 0 view .LVU131
 602 0016 2B4A     		ldr	r2, .L27+8
 603 0018 1278     		ldrb	r2, [r2]
 604              		.loc 1 456 8 view .LVU132
 605 001a 002A     		cmp	r2, #0
 606 001c 1DD0     		beq	.L20
 607              		.loc 1 456 31 discriminator 1 view .LVU133
 608 001e 3F2B     		cmp	r3, #63
 609 0020 1BD9     		bls	.L20
 457:Core/Src/main.cpp ****   {
 458:Core/Src/main.cpp ****     bTurnOn1 = 1;
 610              		.loc 1 458 5 is_stmt 1 view .LVU134
 611              		.loc 1 458 14 is_stmt 0 view .LVU135
 612 0022 294B     		ldr	r3, .L27+12
 613 0024 0122     		movs	r2, #1
 614 0026 1A70     		strb	r2, [r3]
 459:Core/Src/main.cpp ****     isCC = 0;
 615              		.loc 1 459 5 is_stmt 1 view .LVU136
 616              		.loc 1 459 10 is_stmt 0 view .LVU137
 617 0028 254B     		ldr	r3, .L27+4
 618 002a 0022     		movs	r2, #0
 619 002c 1A70     		strb	r2, [r3]
 460:Core/Src/main.cpp ****     isCorrectCCChannel1 = 0;
 620              		.loc 1 460 5 is_stmt 1 view .LVU138
 621              		.loc 1 460 25 is_stmt 0 view .LVU139
 622 002e 254B     		ldr	r3, .L27+8
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 20


 623 0030 1A70     		strb	r2, [r3]
 624 0032 02E0     		b	.L17
 625              	.L24:
 451:Core/Src/main.cpp ****   else if(isCC == 1 && UART1_rxBuffer[0] == MIDI_CC_CHANNEL_1)
 626              		.loc 1 451 5 is_stmt 1 view .LVU140
 451:Core/Src/main.cpp ****   else if(isCC == 1 && UART1_rxBuffer[0] == MIDI_CC_CHANNEL_1)
 627              		.loc 1 451 10 is_stmt 0 view .LVU141
 628 0034 224B     		ldr	r3, .L27+4
 629 0036 0122     		movs	r2, #1
 630 0038 1A70     		strb	r2, [r3]
 631              	.L17:
 461:Core/Src/main.cpp ****   }
 462:Core/Src/main.cpp ****   else if(isCorrectCCChannel2 && UART1_rxBuffer[0] >= 0x40)
 463:Core/Src/main.cpp ****   {
 464:Core/Src/main.cpp ****     bTurnOn2 = 1;
 465:Core/Src/main.cpp ****     isCC = 0;
 466:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 467:Core/Src/main.cpp ****   }
 468:Core/Src/main.cpp ****   else if(isCorrectCCChannel1 && UART1_rxBuffer[0] < 0x40)
 469:Core/Src/main.cpp ****   {
 470:Core/Src/main.cpp ****     bTurnOff1 = 1;
 471:Core/Src/main.cpp ****     isCC = 0;
 472:Core/Src/main.cpp ****     isCorrectCCChannel1 = 0;
 473:Core/Src/main.cpp ****   }
 474:Core/Src/main.cpp ****   else if(isCorrectCCChannel2 && UART1_rxBuffer[0] < 0x40)
 475:Core/Src/main.cpp ****   {
 476:Core/Src/main.cpp ****     bTurnOff2 = 1;
 477:Core/Src/main.cpp ****     isCC = 0;
 478:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 479:Core/Src/main.cpp ****   }
 480:Core/Src/main.cpp ****   else
 481:Core/Src/main.cpp ****   {
 482:Core/Src/main.cpp ****     isCC = 0;
 483:Core/Src/main.cpp ****     isCorrectCCChannel1 = 0;
 484:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 485:Core/Src/main.cpp ****   }
 486:Core/Src/main.cpp ****     
 487:Core/Src/main.cpp ****   HAL_UART_Receive_DMA(&huart1, UART1_rxBuffer, 1);
 632              		.loc 1 487 3 is_stmt 1 view .LVU142
 633              		.loc 1 487 23 is_stmt 0 view .LVU143
 634 003a 2049     		ldr	r1, .L27
 635 003c 2348     		ldr	r0, .L27+16
 636              	.LVL48:
 637              		.loc 1 487 23 view .LVU144
 638 003e 0122     		movs	r2, #1
 639 0040 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 640              	.LVL49:
 488:Core/Src/main.cpp **** }
 641              		.loc 1 488 1 view .LVU145
 642              		@ sp needed
 643 0044 10BD     		pop	{r4, pc}
 644              	.LVL50:
 645              	.L25:
 452:Core/Src/main.cpp ****     isCorrectCCChannel1 = 1;
 646              		.loc 1 452 21 discriminator 1 view .LVU146
 647 0046 502B     		cmp	r3, #80
 648 0048 E3D1     		bne	.L18
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 21


 453:Core/Src/main.cpp ****   else if(isCC == 1 && UART1_rxBuffer[0] == MIDI_CC_CHANNEL_2)
 649              		.loc 1 453 5 is_stmt 1 view .LVU147
 453:Core/Src/main.cpp ****   else if(isCC == 1 && UART1_rxBuffer[0] == MIDI_CC_CHANNEL_2)
 650              		.loc 1 453 25 is_stmt 0 view .LVU148
 651 004a 1E4B     		ldr	r3, .L27+8
 652 004c 1A70     		strb	r2, [r3]
 653 004e F4E7     		b	.L17
 654              	.L26:
 454:Core/Src/main.cpp ****     isCorrectCCChannel2 = 1;
 655              		.loc 1 454 21 discriminator 1 view .LVU149
 656 0050 512B     		cmp	r3, #81
 657 0052 E0D1     		bne	.L19
 455:Core/Src/main.cpp ****   else if(isCorrectCCChannel1 && UART1_rxBuffer[0] >= 0x40)
 658              		.loc 1 455 5 is_stmt 1 view .LVU150
 455:Core/Src/main.cpp ****   else if(isCorrectCCChannel1 && UART1_rxBuffer[0] >= 0x40)
 659              		.loc 1 455 25 is_stmt 0 view .LVU151
 660 0054 1E4B     		ldr	r3, .L27+20
 661 0056 1A70     		strb	r2, [r3]
 662 0058 EFE7     		b	.L17
 663              	.L20:
 462:Core/Src/main.cpp ****   {
 664              		.loc 1 462 8 is_stmt 1 view .LVU152
 462:Core/Src/main.cpp ****   {
 665              		.loc 1 462 11 is_stmt 0 view .LVU153
 666 005a 1D49     		ldr	r1, .L27+20
 667 005c 0978     		ldrb	r1, [r1]
 462:Core/Src/main.cpp ****   {
 668              		.loc 1 462 8 view .LVU154
 669 005e 0029     		cmp	r1, #0
 670 0060 0AD0     		beq	.L21
 462:Core/Src/main.cpp ****   {
 671              		.loc 1 462 31 discriminator 1 view .LVU155
 672 0062 3F2B     		cmp	r3, #63
 673 0064 08D9     		bls	.L21
 464:Core/Src/main.cpp ****     isCC = 0;
 674              		.loc 1 464 5 is_stmt 1 view .LVU156
 464:Core/Src/main.cpp ****     isCC = 0;
 675              		.loc 1 464 14 is_stmt 0 view .LVU157
 676 0066 1B4B     		ldr	r3, .L27+24
 677 0068 0122     		movs	r2, #1
 678 006a 1A70     		strb	r2, [r3]
 465:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 679              		.loc 1 465 5 is_stmt 1 view .LVU158
 465:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 680              		.loc 1 465 10 is_stmt 0 view .LVU159
 681 006c 144B     		ldr	r3, .L27+4
 682 006e 0022     		movs	r2, #0
 683 0070 1A70     		strb	r2, [r3]
 466:Core/Src/main.cpp ****   }
 684              		.loc 1 466 5 is_stmt 1 view .LVU160
 466:Core/Src/main.cpp ****   }
 685              		.loc 1 466 25 is_stmt 0 view .LVU161
 686 0072 174B     		ldr	r3, .L27+20
 687 0074 1A70     		strb	r2, [r3]
 688 0076 E0E7     		b	.L17
 689              	.L21:
 468:Core/Src/main.cpp ****   {
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 22


 690              		.loc 1 468 8 is_stmt 1 view .LVU162
 691 0078 002A     		cmp	r2, #0
 692 007a 0AD0     		beq	.L22
 468:Core/Src/main.cpp ****   {
 693              		.loc 1 468 31 is_stmt 0 discriminator 1 view .LVU163
 694 007c 3F2B     		cmp	r3, #63
 695 007e 08D8     		bhi	.L22
 470:Core/Src/main.cpp ****     isCC = 0;
 696              		.loc 1 470 5 is_stmt 1 view .LVU164
 470:Core/Src/main.cpp ****     isCC = 0;
 697              		.loc 1 470 15 is_stmt 0 view .LVU165
 698 0080 154B     		ldr	r3, .L27+28
 699 0082 0122     		movs	r2, #1
 700 0084 1A70     		strb	r2, [r3]
 471:Core/Src/main.cpp ****     isCorrectCCChannel1 = 0;
 701              		.loc 1 471 5 is_stmt 1 view .LVU166
 471:Core/Src/main.cpp ****     isCorrectCCChannel1 = 0;
 702              		.loc 1 471 10 is_stmt 0 view .LVU167
 703 0086 0E4B     		ldr	r3, .L27+4
 704 0088 0022     		movs	r2, #0
 705 008a 1A70     		strb	r2, [r3]
 472:Core/Src/main.cpp ****   }
 706              		.loc 1 472 5 is_stmt 1 view .LVU168
 472:Core/Src/main.cpp ****   }
 707              		.loc 1 472 25 is_stmt 0 view .LVU169
 708 008c 0D4B     		ldr	r3, .L27+8
 709 008e 1A70     		strb	r2, [r3]
 710 0090 D3E7     		b	.L17
 711              	.L22:
 474:Core/Src/main.cpp ****   {
 712              		.loc 1 474 8 is_stmt 1 view .LVU170
 713 0092 0029     		cmp	r1, #0
 714 0094 0AD0     		beq	.L23
 474:Core/Src/main.cpp ****   {
 715              		.loc 1 474 31 is_stmt 0 discriminator 1 view .LVU171
 716 0096 3F2B     		cmp	r3, #63
 717 0098 08D8     		bhi	.L23
 476:Core/Src/main.cpp ****     isCC = 0;
 718              		.loc 1 476 5 is_stmt 1 view .LVU172
 476:Core/Src/main.cpp ****     isCC = 0;
 719              		.loc 1 476 15 is_stmt 0 view .LVU173
 720 009a 104B     		ldr	r3, .L27+32
 721 009c 0122     		movs	r2, #1
 722 009e 1A70     		strb	r2, [r3]
 477:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 723              		.loc 1 477 5 is_stmt 1 view .LVU174
 477:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 724              		.loc 1 477 10 is_stmt 0 view .LVU175
 725 00a0 074B     		ldr	r3, .L27+4
 726 00a2 0022     		movs	r2, #0
 727 00a4 1A70     		strb	r2, [r3]
 478:Core/Src/main.cpp ****   }
 728              		.loc 1 478 5 is_stmt 1 view .LVU176
 478:Core/Src/main.cpp ****   }
 729              		.loc 1 478 25 is_stmt 0 view .LVU177
 730 00a6 0A4B     		ldr	r3, .L27+20
 731 00a8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 23


 732 00aa C6E7     		b	.L17
 733              	.L23:
 482:Core/Src/main.cpp ****     isCorrectCCChannel1 = 0;
 734              		.loc 1 482 5 is_stmt 1 view .LVU178
 482:Core/Src/main.cpp ****     isCorrectCCChannel1 = 0;
 735              		.loc 1 482 10 is_stmt 0 view .LVU179
 736 00ac 044A     		ldr	r2, .L27+4
 737 00ae 0023     		movs	r3, #0
 738 00b0 1370     		strb	r3, [r2]
 483:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 739              		.loc 1 483 5 is_stmt 1 view .LVU180
 483:Core/Src/main.cpp ****     isCorrectCCChannel2 = 0;
 740              		.loc 1 483 25 is_stmt 0 view .LVU181
 741 00b2 044A     		ldr	r2, .L27+8
 742 00b4 1370     		strb	r3, [r2]
 484:Core/Src/main.cpp ****   }
 743              		.loc 1 484 5 is_stmt 1 view .LVU182
 484:Core/Src/main.cpp ****   }
 744              		.loc 1 484 25 is_stmt 0 view .LVU183
 745 00b6 064A     		ldr	r2, .L27+20
 746 00b8 1370     		strb	r3, [r2]
 747 00ba BEE7     		b	.L17
 748              	.L28:
 749              		.align	2
 750              	.L27:
 751 00bc 00000000 		.word	UART1_rxBuffer
 752 00c0 00000000 		.word	isCC
 753 00c4 00000000 		.word	isCorrectCCChannel1
 754 00c8 00000000 		.word	bTurnOn1
 755 00cc 00000000 		.word	huart1
 756 00d0 00000000 		.word	isCorrectCCChannel2
 757 00d4 00000000 		.word	bTurnOn2
 758 00d8 00000000 		.word	bTurnOff1
 759 00dc 00000000 		.word	bTurnOff2
 760              		.cfi_endproc
 761              	.LFE400:
 762              		.fnend
 764              		.section	.text._Z16Flash_Write_DatamPmt,"ax",%progbits
 765              		.align	1
 766              		.global	_Z16Flash_Write_DatamPmt
 767              		.syntax unified
 768              		.code	16
 769              		.thumb_func
 771              	_Z16Flash_Write_DatamPmt:
 772              		.fnstart
 773              	.LVL51:
 774              	.LFB401:
 489:Core/Src/main.cpp **** 
 490:Core/Src/main.cpp **** 
 491:Core/Src/main.cpp **** uint32_t Flash_Write_Data (uint32_t StartPageAddress, uint32_t *Data, uint16_t numberofwords)
 492:Core/Src/main.cpp **** {
 775              		.loc 1 492 1 is_stmt 1 view -0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 8
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		.loc 1 492 1 is_stmt 0 view .LVU185
 780 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 24


 781              		.save {r4, r5, r6, r7, lr}
 782              	.LCFI11:
 783              		.cfi_def_cfa_offset 20
 784              		.cfi_offset 4, -20
 785              		.cfi_offset 5, -16
 786              		.cfi_offset 6, -12
 787              		.cfi_offset 7, -8
 788              		.cfi_offset 14, -4
 789              		.pad #12
 790 0002 83B0     		sub	sp, sp, #12
 791              	.LCFI12:
 792              		.cfi_def_cfa_offset 32
 793 0004 0500     		movs	r5, r0
 794 0006 0F00     		movs	r7, r1
 795 0008 1600     		movs	r6, r2
 493:Core/Src/main.cpp **** 
 494:Core/Src/main.cpp **** 	static FLASH_EraseInitTypeDef EraseInitStruct;
 796              		.loc 1 494 2 is_stmt 1 view .LVU186
 495:Core/Src/main.cpp **** 	uint32_t PAGEError;
 797              		.loc 1 495 2 view .LVU187
 496:Core/Src/main.cpp **** 	int sofar=0;
 798              		.loc 1 496 2 view .LVU188
 799              	.LVL52:
 497:Core/Src/main.cpp **** 
 498:Core/Src/main.cpp **** 	  /* Unlock the Flash to enable the flash control register access *************/
 499:Core/Src/main.cpp **** 	   HAL_FLASH_Unlock();
 800              		.loc 1 499 5 view .LVU189
 801              		.loc 1 499 21 is_stmt 0 view .LVU190
 802 000a FFF7FEFF 		bl	HAL_FLASH_Unlock
 803              	.LVL53:
 500:Core/Src/main.cpp **** 
 501:Core/Src/main.cpp **** 	   /* Erase the user Flash area*/
 502:Core/Src/main.cpp **** 
 503:Core/Src/main.cpp **** 	  uint32_t StartPage =  1;
 804              		.loc 1 503 4 is_stmt 1 view .LVU191
 504:Core/Src/main.cpp **** 	  uint32_t EndPageAdress = StartPageAddress + numberofwords*4;
 805              		.loc 1 504 4 view .LVU192
 505:Core/Src/main.cpp **** 	  uint32_t EndPage = 21;
 806              		.loc 1 505 4 view .LVU193
 506:Core/Src/main.cpp **** 
 507:Core/Src/main.cpp **** 	   /* Fill EraseInit structure*/
 508:Core/Src/main.cpp **** 	   EraseInitStruct.TypeErase   = FLASH_TYPEERASE_PAGES;
 807              		.loc 1 508 5 view .LVU194
 808              		.loc 1 508 33 is_stmt 0 view .LVU195
 809 000e 1248     		ldr	r0, .L37
 810 0010 0223     		movs	r3, #2
 811 0012 0360     		str	r3, [r0]
 509:Core/Src/main.cpp **** 	   EraseInitStruct.Page = StartPage;
 812              		.loc 1 509 5 is_stmt 1 view .LVU196
 813              		.loc 1 509 26 is_stmt 0 view .LVU197
 814 0014 013B     		subs	r3, r3, #1
 815 0016 8360     		str	r3, [r0, #8]
 510:Core/Src/main.cpp **** 	   EraseInitStruct.NbPages     = ((EndPage - StartPage)/FLASH_PAGE_SIZE) +1;
 816              		.loc 1 510 5 is_stmt 1 view .LVU198
 817              		.loc 1 510 33 is_stmt 0 view .LVU199
 818 0018 C360     		str	r3, [r0, #12]
 511:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 25


 512:Core/Src/main.cpp **** 	   if (HAL_FLASHEx_Erase(&EraseInitStruct, &PAGEError) != HAL_OK)
 819              		.loc 1 512 5 is_stmt 1 view .LVU200
 820              		.loc 1 512 26 is_stmt 0 view .LVU201
 821 001a 01A9     		add	r1, sp, #4
 822 001c FFF7FEFF 		bl	HAL_FLASHEx_Erase
 823              	.LVL54:
 824              		.loc 1 512 5 view .LVU202
 825 0020 0028     		cmp	r0, #0
 826 0022 0ED1     		bne	.L35
 496:Core/Src/main.cpp **** 
 827              		.loc 1 496 6 view .LVU203
 828 0024 0024     		movs	r4, #0
 829              	.LVL55:
 830              	.L30:
 513:Core/Src/main.cpp **** 	   {
 514:Core/Src/main.cpp **** 	     /*Error occurred while page erase.*/
 515:Core/Src/main.cpp **** 		  return HAL_FLASH_GetError ();
 516:Core/Src/main.cpp **** 	   }
 517:Core/Src/main.cpp **** 
 518:Core/Src/main.cpp **** 	   /* Program the user Flash area word by word*/
 519:Core/Src/main.cpp **** 
 520:Core/Src/main.cpp **** 	   while (sofar<numberofwords)
 831              		.loc 1 520 17 is_stmt 1 view .LVU204
 832 0026 A642     		cmp	r6, r4
 833 0028 11DD     		ble	.L36
 521:Core/Src/main.cpp **** 	   {
 522:Core/Src/main.cpp **** 	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, StartPageAddress, Data[sofar]) == HAL_OK)
 834              		.loc 1 522 7 view .LVU205
 835              		.loc 1 522 87 is_stmt 0 view .LVU206
 836 002a A300     		lsls	r3, r4, #2
 837 002c DA59     		ldr	r2, [r3, r7]
 838              		.loc 1 522 28 view .LVU207
 839 002e 0023     		movs	r3, #0
 840 0030 2900     		movs	r1, r5
 841 0032 0120     		movs	r0, #1
 842 0034 FFF7FEFF 		bl	HAL_FLASH_Program
 843              	.LVL56:
 844              		.loc 1 522 7 view .LVU208
 845 0038 0028     		cmp	r0, #0
 846 003a 05D1     		bne	.L32
 523:Core/Src/main.cpp **** 	     {
 524:Core/Src/main.cpp **** 	    	 StartPageAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
 847              		.loc 1 524 8 is_stmt 1 view .LVU209
 848              		.loc 1 524 25 is_stmt 0 view .LVU210
 849 003c 0435     		adds	r5, r5, #4
 850              	.LVL57:
 525:Core/Src/main.cpp **** 	    	 sofar++;
 851              		.loc 1 525 8 is_stmt 1 view .LVU211
 852              		.loc 1 525 13 is_stmt 0 view .LVU212
 853 003e 0134     		adds	r4, r4, #1
 854              	.LVL58:
 855              		.loc 1 525 13 view .LVU213
 856 0040 F1E7     		b	.L30
 857              	.LVL59:
 858              	.L35:
 515:Core/Src/main.cpp **** 	   }
 859              		.loc 1 515 5 is_stmt 1 view .LVU214
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 26


 515:Core/Src/main.cpp **** 	   }
 860              		.loc 1 515 31 is_stmt 0 view .LVU215
 861 0042 FFF7FEFF 		bl	HAL_FLASH_GetError
 862              	.LVL60:
 863 0046 05E0     		b	.L29
 864              	.LVL61:
 865              	.L32:
 526:Core/Src/main.cpp **** 	     }
 527:Core/Src/main.cpp **** 	     else
 528:Core/Src/main.cpp **** 	     {
 529:Core/Src/main.cpp **** 	       /* Error occurred while writing data in Flash memory*/
 530:Core/Src/main.cpp **** 	    	 return HAL_FLASH_GetError ();
 866              		.loc 1 530 8 is_stmt 1 view .LVU216
 867              		.loc 1 530 34 is_stmt 0 view .LVU217
 868 0048 FFF7FEFF 		bl	HAL_FLASH_GetError
 869              	.LVL62:
 870 004c 02E0     		b	.L29
 871              	.L36:
 531:Core/Src/main.cpp **** 	     }
 532:Core/Src/main.cpp **** 	   }
 533:Core/Src/main.cpp **** 
 534:Core/Src/main.cpp **** 	   /* Lock the Flash to disable the flash control register access (recommended
 535:Core/Src/main.cpp **** 	      to protect the FLASH memory against possible unwanted operation) *********/
 536:Core/Src/main.cpp **** 	   HAL_FLASH_Lock();
 872              		.loc 1 536 5 is_stmt 1 view .LVU218
 873              		.loc 1 536 19 is_stmt 0 view .LVU219
 874 004e FFF7FEFF 		bl	HAL_FLASH_Lock
 875              	.LVL63:
 537:Core/Src/main.cpp **** 
 538:Core/Src/main.cpp **** 	   return 0;
 876              		.loc 1 538 12 view .LVU220
 877 0052 0020     		movs	r0, #0
 878              	.LVL64:
 879              	.L29:
 539:Core/Src/main.cpp **** }
 880              		.loc 1 539 1 view .LVU221
 881 0054 03B0     		add	sp, sp, #12
 882              		@ sp needed
 883              	.LVL65:
 884              	.LVL66:
 885              	.LVL67:
 886              		.loc 1 539 1 view .LVU222
 887 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 888              	.L38:
 889              		.align	2
 890              	.L37:
 891 0058 00000000 		.word	_ZZ16Flash_Write_DatamPmtE15EraseInitStruct
 892              		.cfi_endproc
 893              	.LFE401:
 894              		.fnend
 896              		.section	.text._Z15Flash_Read_DatamPmt,"ax",%progbits
 897              		.align	1
 898              		.global	_Z15Flash_Read_DatamPmt
 899              		.syntax unified
 900              		.code	16
 901              		.thumb_func
 903              	_Z15Flash_Read_DatamPmt:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 27


 904              		.fnstart
 905              	.LFB402:
 540:Core/Src/main.cpp **** 
 541:Core/Src/main.cpp **** 
 542:Core/Src/main.cpp **** void Flash_Read_Data (uint32_t StartPageAddress, uint32_t *RxBuf, uint16_t numberofwords)
 543:Core/Src/main.cpp **** {
 906              		.loc 1 543 1 is_stmt 1 view -0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 0
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              		@ link register save eliminated.
 911              	.LVL68:
 912              	.L40:
 544:Core/Src/main.cpp **** 	while (1)
 913              		.loc 1 544 2 view .LVU224
 545:Core/Src/main.cpp **** 	{
 546:Core/Src/main.cpp **** 
 547:Core/Src/main.cpp **** 		*RxBuf = *(__IO uint32_t *)StartPageAddress;
 914              		.loc 1 547 3 view .LVU225
 915              		.loc 1 547 12 is_stmt 0 view .LVU226
 916 0000 08C8     		ldmia	r0!, {r3}
 917              		.loc 1 547 10 view .LVU227
 918 0002 08C1     		stmia	r1!, {r3}
 548:Core/Src/main.cpp **** 		StartPageAddress += 4;
 919              		.loc 1 548 3 is_stmt 1 view .LVU228
 920              	.LVL69:
 549:Core/Src/main.cpp **** 		RxBuf++;
 921              		.loc 1 549 3 view .LVU229
 550:Core/Src/main.cpp **** 		if (!(numberofwords--)) break;
 922              		.loc 1 550 3 view .LVU230
 923 0004 1300     		movs	r3, r2
 924              		.loc 1 550 22 is_stmt 0 view .LVU231
 925 0006 013A     		subs	r2, r2, #1
 926 0008 92B2     		uxth	r2, r2
 927              	.LVL70:
 928              		.loc 1 550 3 view .LVU232
 929 000a 002B     		cmp	r3, #0
 930 000c F8D1     		bne	.L40
 551:Core/Src/main.cpp **** 	}
 552:Core/Src/main.cpp **** }
 931              		.loc 1 552 1 view .LVU233
 932              		@ sp needed
 933 000e 7047     		bx	lr
 934              		.cfi_endproc
 935              	.LFE402:
 936              		.cantunwind
 937              		.fnend
 939              		.section	.text._Z11float2BytesPhf,"ax",%progbits
 940              		.align	1
 941              		.global	_Z11float2BytesPhf
 942              		.syntax unified
 943              		.code	16
 944              		.thumb_func
 946              	_Z11float2BytesPhf:
 947              		.fnstart
 948              	.LVL71:
 949              	.LFB405:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 28


 553:Core/Src/main.cpp **** 
 554:Core/Src/main.cpp **** void Flash_Write_NUM (uint32_t StartSectorAddress, float Num)
 555:Core/Src/main.cpp **** {
 556:Core/Src/main.cpp **** 	float2Bytes(bytes_temp, Num);
 557:Core/Src/main.cpp **** 	Flash_Write_Data (StartSectorAddress, (uint32_t *)bytes_temp, 1);
 558:Core/Src/main.cpp **** }
 559:Core/Src/main.cpp **** 
 560:Core/Src/main.cpp **** 
 561:Core/Src/main.cpp **** float Flash_Read_NUM (uint32_t StartSectorAddress)
 562:Core/Src/main.cpp **** {
 563:Core/Src/main.cpp **** 	uint8_t buffer[4];
 564:Core/Src/main.cpp **** 	float value;
 565:Core/Src/main.cpp **** 
 566:Core/Src/main.cpp **** 	Flash_Read_Data(StartSectorAddress, (uint32_t *)buffer, 1);
 567:Core/Src/main.cpp **** 	value = Bytes2float(buffer);
 568:Core/Src/main.cpp **** 	return value;
 569:Core/Src/main.cpp **** }
 570:Core/Src/main.cpp **** 
 571:Core/Src/main.cpp **** void float2Bytes(uint8_t * ftoa_bytes_temp,float float_variable)
 572:Core/Src/main.cpp **** {
 950              		.loc 1 572 1 is_stmt 1 view -0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              		.loc 1 572 1 is_stmt 0 view .LVU235
 956 0000 82B0     		sub	sp, sp, #8
 957              	.LCFI13:
 958              		.cfi_def_cfa_offset 8
 573:Core/Src/main.cpp ****     union {
 959              		.loc 1 573 5 is_stmt 1 view .LVU236
 574:Core/Src/main.cpp ****       float a;
 575:Core/Src/main.cpp ****       uint8_t bytes[4];
 576:Core/Src/main.cpp ****     } thing;
 577:Core/Src/main.cpp **** 
 578:Core/Src/main.cpp ****     thing.a = float_variable;
 960              		.loc 1 578 5 view .LVU237
 961              		.loc 1 578 13 is_stmt 0 view .LVU238
 962 0002 0191     		str	r1, [sp, #4]
 579:Core/Src/main.cpp **** 
 580:Core/Src/main.cpp ****     for (uint8_t i = 0; i < 4; i++) {
 963              		.loc 1 580 5 is_stmt 1 view .LVU239
 964              	.LVL72:
 965              	.LBB8:
 966              		.loc 1 580 18 is_stmt 0 view .LVU240
 967 0004 0023     		movs	r3, #0
 968              		.loc 1 580 5 view .LVU241
 969 0006 04E0     		b	.L42
 970              	.LVL73:
 971              	.L43:
 581:Core/Src/main.cpp ****       ftoa_bytes_temp[i] = thing.bytes[i];
 972              		.loc 1 581 7 is_stmt 1 discriminator 3 view .LVU242
 973              		.loc 1 581 41 is_stmt 0 discriminator 3 view .LVU243
 974 0008 01AA     		add	r2, sp, #4
 975 000a D25C     		ldrb	r2, [r2, r3]
 976              		.loc 1 581 26 discriminator 3 view .LVU244
 977 000c C254     		strb	r2, [r0, r3]
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 29


 580:Core/Src/main.cpp ****       ftoa_bytes_temp[i] = thing.bytes[i];
 978              		.loc 1 580 5 is_stmt 1 discriminator 3 view .LVU245
 979 000e 0133     		adds	r3, r3, #1
 980              	.LVL74:
 580:Core/Src/main.cpp ****       ftoa_bytes_temp[i] = thing.bytes[i];
 981              		.loc 1 580 5 is_stmt 0 discriminator 3 view .LVU246
 982 0010 DBB2     		uxtb	r3, r3
 983              	.LVL75:
 984              	.L42:
 580:Core/Src/main.cpp ****       ftoa_bytes_temp[i] = thing.bytes[i];
 985              		.loc 1 580 27 is_stmt 1 discriminator 1 view .LVU247
 986 0012 032B     		cmp	r3, #3
 987 0014 F8D9     		bls	.L43
 988              	.LBE8:
 582:Core/Src/main.cpp ****     }
 583:Core/Src/main.cpp **** 
 584:Core/Src/main.cpp **** }
 989              		.loc 1 584 1 is_stmt 0 view .LVU248
 990 0016 02B0     		add	sp, sp, #8
 991              		@ sp needed
 992 0018 7047     		bx	lr
 993              		.cfi_endproc
 994              	.LFE405:
 995              		.cantunwind
 996              		.fnend
 998              		.section	.text._Z15Flash_Write_NUMmf,"ax",%progbits
 999              		.align	1
 1000              		.global	_Z15Flash_Write_NUMmf
 1001              		.syntax unified
 1002              		.code	16
 1003              		.thumb_func
 1005              	_Z15Flash_Write_NUMmf:
 1006              		.fnstart
 1007              	.LVL76:
 1008              	.LFB403:
 555:Core/Src/main.cpp **** 	float2Bytes(bytes_temp, Num);
 1009              		.loc 1 555 1 is_stmt 1 view -0
 1010              		.cfi_startproc
 1011              		@ args = 0, pretend = 0, frame = 0
 1012              		@ frame_needed = 0, uses_anonymous_args = 0
 555:Core/Src/main.cpp **** 	float2Bytes(bytes_temp, Num);
 1013              		.loc 1 555 1 is_stmt 0 view .LVU250
 1014 0000 70B5     		push	{r4, r5, r6, lr}
 1015              		.save {r4, r5, r6, lr}
 1016              	.LCFI14:
 1017              		.cfi_def_cfa_offset 16
 1018              		.cfi_offset 4, -16
 1019              		.cfi_offset 5, -12
 1020              		.cfi_offset 6, -8
 1021              		.cfi_offset 14, -4
 1022 0002 0500     		movs	r5, r0
 556:Core/Src/main.cpp **** 	Flash_Write_Data (StartSectorAddress, (uint32_t *)bytes_temp, 1);
 1023              		.loc 1 556 2 is_stmt 1 view .LVU251
 556:Core/Src/main.cpp **** 	Flash_Write_Data (StartSectorAddress, (uint32_t *)bytes_temp, 1);
 1024              		.loc 1 556 13 is_stmt 0 view .LVU252
 1025 0004 044C     		ldr	r4, .L45
 1026 0006 2000     		movs	r0, r4
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 30


 1027              	.LVL77:
 556:Core/Src/main.cpp **** 	Flash_Write_Data (StartSectorAddress, (uint32_t *)bytes_temp, 1);
 1028              		.loc 1 556 13 view .LVU253
 1029 0008 FFF7FEFF 		bl	_Z11float2BytesPhf
 1030              	.LVL78:
 557:Core/Src/main.cpp **** }
 1031              		.loc 1 557 2 is_stmt 1 view .LVU254
 557:Core/Src/main.cpp **** }
 1032              		.loc 1 557 19 is_stmt 0 view .LVU255
 1033 000c 0122     		movs	r2, #1
 1034 000e 2100     		movs	r1, r4
 1035 0010 2800     		movs	r0, r5
 1036 0012 FFF7FEFF 		bl	_Z16Flash_Write_DatamPmt
 1037              	.LVL79:
 558:Core/Src/main.cpp **** 
 1038              		.loc 1 558 1 view .LVU256
 1039              		@ sp needed
 1040              	.LVL80:
 558:Core/Src/main.cpp **** 
 1041              		.loc 1 558 1 view .LVU257
 1042 0016 70BD     		pop	{r4, r5, r6, pc}
 1043              	.L46:
 1044              		.align	2
 1045              	.L45:
 1046 0018 00000000 		.word	bytes_temp
 1047              		.cfi_endproc
 1048              	.LFE403:
 1049              		.fnend
 1051              		.section	.text._Z11Bytes2floatPh,"ax",%progbits
 1052              		.align	1
 1053              		.global	_Z11Bytes2floatPh
 1054              		.syntax unified
 1055              		.code	16
 1056              		.thumb_func
 1058              	_Z11Bytes2floatPh:
 1059              		.fnstart
 1060              	.LVL81:
 1061              	.LFB406:
 585:Core/Src/main.cpp **** 
 586:Core/Src/main.cpp **** float Bytes2float(uint8_t * ftoa_bytes_temp)
 587:Core/Src/main.cpp **** {
 1062              		.loc 1 587 1 is_stmt 1 view -0
 1063              		.cfi_startproc
 1064              		@ args = 0, pretend = 0, frame = 8
 1065              		@ frame_needed = 0, uses_anonymous_args = 0
 1066              		@ link register save eliminated.
 1067              		.loc 1 587 1 is_stmt 0 view .LVU259
 1068 0000 82B0     		sub	sp, sp, #8
 1069              	.LCFI15:
 1070              		.cfi_def_cfa_offset 8
 588:Core/Src/main.cpp ****     union {
 1071              		.loc 1 588 5 is_stmt 1 view .LVU260
 589:Core/Src/main.cpp ****       float a;
 590:Core/Src/main.cpp ****       uint8_t bytes[4];
 591:Core/Src/main.cpp ****     } thing;
 592:Core/Src/main.cpp **** 
 593:Core/Src/main.cpp ****     for (uint8_t i = 0; i < 4; i++) {
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 31


 1072              		.loc 1 593 5 view .LVU261
 1073              	.LVL82:
 1074              	.LBB9:
 1075              		.loc 1 593 18 is_stmt 0 view .LVU262
 1076 0002 0023     		movs	r3, #0
 1077              		.loc 1 593 5 view .LVU263
 1078 0004 04E0     		b	.L48
 1079              	.LVL83:
 1080              	.L49:
 594:Core/Src/main.cpp ****     	thing.bytes[i] = ftoa_bytes_temp[i];
 1081              		.loc 1 594 6 is_stmt 1 discriminator 3 view .LVU264
 1082              		.loc 1 594 40 is_stmt 0 discriminator 3 view .LVU265
 1083 0006 C15C     		ldrb	r1, [r0, r3]
 1084              		.loc 1 594 21 discriminator 3 view .LVU266
 1085 0008 01AA     		add	r2, sp, #4
 1086 000a D154     		strb	r1, [r2, r3]
 593:Core/Src/main.cpp ****     	thing.bytes[i] = ftoa_bytes_temp[i];
 1087              		.loc 1 593 5 is_stmt 1 discriminator 3 view .LVU267
 1088 000c 0133     		adds	r3, r3, #1
 1089              	.LVL84:
 593:Core/Src/main.cpp ****     	thing.bytes[i] = ftoa_bytes_temp[i];
 1090              		.loc 1 593 5 is_stmt 0 discriminator 3 view .LVU268
 1091 000e DBB2     		uxtb	r3, r3
 1092              	.LVL85:
 1093              	.L48:
 593:Core/Src/main.cpp ****     	thing.bytes[i] = ftoa_bytes_temp[i];
 1094              		.loc 1 593 27 is_stmt 1 discriminator 1 view .LVU269
 1095 0010 032B     		cmp	r3, #3
 1096 0012 F8D9     		bls	.L49
 1097              	.LBE9:
 595:Core/Src/main.cpp ****     }
 596:Core/Src/main.cpp **** 
 597:Core/Src/main.cpp ****    float float_variable =  thing.a;
 1098              		.loc 1 597 4 view .LVU270
 1099              		.loc 1 597 10 is_stmt 0 view .LVU271
 1100 0014 0198     		ldr	r0, [sp, #4]
 1101              	.LVL86:
 598:Core/Src/main.cpp ****    return float_variable;
 1102              		.loc 1 598 4 is_stmt 1 view .LVU272
 599:Core/Src/main.cpp **** }
 1103              		.loc 1 599 1 is_stmt 0 view .LVU273
 1104 0016 02B0     		add	sp, sp, #8
 1105              		@ sp needed
 1106 0018 7047     		bx	lr
 1107              		.cfi_endproc
 1108              	.LFE406:
 1109              		.cantunwind
 1110              		.fnend
 1112              		.section	.text._Z14Flash_Read_NUMm,"ax",%progbits
 1113              		.align	1
 1114              		.global	_Z14Flash_Read_NUMm
 1115              		.syntax unified
 1116              		.code	16
 1117              		.thumb_func
 1119              	_Z14Flash_Read_NUMm:
 1120              		.fnstart
 1121              	.LVL87:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 32


 1122              	.LFB404:
 562:Core/Src/main.cpp **** 	uint8_t buffer[4];
 1123              		.loc 1 562 1 is_stmt 1 view -0
 1124              		.cfi_startproc
 1125              		@ args = 0, pretend = 0, frame = 8
 1126              		@ frame_needed = 0, uses_anonymous_args = 0
 562:Core/Src/main.cpp **** 	uint8_t buffer[4];
 1127              		.loc 1 562 1 is_stmt 0 view .LVU275
 1128 0000 00B5     		push	{lr}
 1129              	.LCFI16:
 1130              		.cfi_def_cfa_offset 4
 1131              		.cfi_offset 14, -4
 1132 0002 83B0     		sub	sp, sp, #12
 1133              	.LCFI17:
 1134              		.cfi_def_cfa_offset 16
 563:Core/Src/main.cpp **** 	float value;
 1135              		.loc 1 563 2 is_stmt 1 view .LVU276
 564:Core/Src/main.cpp **** 
 1136              		.loc 1 564 2 view .LVU277
 566:Core/Src/main.cpp **** 	value = Bytes2float(buffer);
 1137              		.loc 1 566 2 view .LVU278
 566:Core/Src/main.cpp **** 	value = Bytes2float(buffer);
 1138              		.loc 1 566 17 is_stmt 0 view .LVU279
 1139 0004 0122     		movs	r2, #1
 1140 0006 01A9     		add	r1, sp, #4
 1141 0008 FFF7FEFF 		bl	_Z15Flash_Read_DatamPmt
 1142              	.LVL88:
 567:Core/Src/main.cpp **** 	return value;
 1143              		.loc 1 567 2 is_stmt 1 view .LVU280
 567:Core/Src/main.cpp **** 	return value;
 1144              		.loc 1 567 21 is_stmt 0 view .LVU281
 1145 000c 01A8     		add	r0, sp, #4
 1146 000e FFF7FEFF 		bl	_Z11Bytes2floatPh
 1147              	.LVL89:
 568:Core/Src/main.cpp **** }
 1148              		.loc 1 568 2 is_stmt 1 view .LVU282
 569:Core/Src/main.cpp **** 
 1149              		.loc 1 569 1 is_stmt 0 view .LVU283
 1150 0012 03B0     		add	sp, sp, #12
 1151              		@ sp needed
 1152 0014 00BD     		pop	{pc}
 1153              		.cfi_endproc
 1154              	.LFE404:
 1155              		.cantunwind
 1156              		.fnend
 1158              		.section	.text.Error_Handler,"ax",%progbits
 1159              		.align	1
 1160              		.global	Error_Handler
 1161              		.syntax unified
 1162              		.code	16
 1163              		.thumb_func
 1165              	Error_Handler:
 1166              		.fnstart
 1167              	.LFB407:
 600:Core/Src/main.cpp **** /* USER CODE END 4 */
 601:Core/Src/main.cpp **** 
 602:Core/Src/main.cpp **** /**
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 33


 603:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 604:Core/Src/main.cpp ****   * @retval None
 605:Core/Src/main.cpp ****   */
 606:Core/Src/main.cpp **** void Error_Handler(void)
 607:Core/Src/main.cpp **** {
 1168              		.loc 1 607 1 is_stmt 1 view -0
 1169              		.cfi_startproc
 1170              		@ Volatile: function does not return.
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
 1173              		@ link register save eliminated.
 608:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 609:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 610:Core/Src/main.cpp ****   __disable_irq();
 1174              		.loc 1 610 3 view .LVU285
 1175              	.LBB10:
 1176              	.LBI10:
 1177              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 34


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 35


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 36


 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1178              		.loc 2 207 27 view .LVU286
 1179              	.LBB11:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 37


 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1180              		.loc 2 209 3 view .LVU287
 1181              		.syntax divided
 1182              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1183 0000 72B6     		cpsid i
 1184              	@ 0 "" 2
 1185              		.thumb
 1186              		.syntax unified
 1187              	.L52:
 1188              	.LBE11:
 1189              	.LBE10:
 611:Core/Src/main.cpp ****   while (1)
 1190              		.loc 1 611 3 discriminator 1 view .LVU288
 1191              		.loc 1 611 3 discriminator 1 view .LVU289
 1192 0002 FEE7     		b	.L52
 1193              		.cfi_endproc
 1194              	.LFE407:
 1195              		.cantunwind
 1196              		.fnend
 1198              		.section	.text._ZL19MX_USART1_UART_Initv,"ax",%progbits
 1199              		.align	1
 1200              		.syntax unified
 1201              		.code	16
 1202              		.thumb_func
 1204              	_ZL19MX_USART1_UART_Initv:
 1205              		.fnstart
 1206              	.LFB393:
 314:Core/Src/main.cpp **** 
 1207              		.loc 1 314 1 view -0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211 0000 10B5     		push	{r4, lr}
 1212              		.save {r4, lr}
 1213              	.LCFI18:
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 4, -8
 1216              		.cfi_offset 14, -4
 323:Core/Src/main.cpp ****   huart1.Init.BaudRate = 31250;
 1217              		.loc 1 323 3 view .LVU291
 323:Core/Src/main.cpp ****   huart1.Init.BaudRate = 31250;
 1218              		.loc 1 323 19 is_stmt 0 view .LVU292
 1219 0002 1748     		ldr	r0, .L62
 1220 0004 174B     		ldr	r3, .L62+4
 1221 0006 0360     		str	r3, [r0]
 324:Core/Src/main.cpp ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1222              		.loc 1 324 3 is_stmt 1 view .LVU293
 324:Core/Src/main.cpp ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 1223              		.loc 1 324 24 is_stmt 0 view .LVU294
 1224 0008 174B     		ldr	r3, .L62+8
 1225 000a 4360     		str	r3, [r0, #4]
 325:Core/Src/main.cpp ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1226              		.loc 1 325 3 is_stmt 1 view .LVU295
 325:Core/Src/main.cpp ****   huart1.Init.StopBits = UART_STOPBITS_1;
 1227              		.loc 1 325 26 is_stmt 0 view .LVU296
 1228 000c 0023     		movs	r3, #0
 1229 000e 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 38


 326:Core/Src/main.cpp ****   huart1.Init.Parity = UART_PARITY_NONE;
 1230              		.loc 1 326 3 is_stmt 1 view .LVU297
 326:Core/Src/main.cpp ****   huart1.Init.Parity = UART_PARITY_NONE;
 1231              		.loc 1 326 24 is_stmt 0 view .LVU298
 1232 0010 C360     		str	r3, [r0, #12]
 327:Core/Src/main.cpp ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1233              		.loc 1 327 3 is_stmt 1 view .LVU299
 327:Core/Src/main.cpp ****   huart1.Init.Mode = UART_MODE_TX_RX;
 1234              		.loc 1 327 22 is_stmt 0 view .LVU300
 1235 0012 0361     		str	r3, [r0, #16]
 328:Core/Src/main.cpp ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1236              		.loc 1 328 3 is_stmt 1 view .LVU301
 328:Core/Src/main.cpp ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1237              		.loc 1 328 20 is_stmt 0 view .LVU302
 1238 0014 0C22     		movs	r2, #12
 1239 0016 4261     		str	r2, [r0, #20]
 329:Core/Src/main.cpp ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1240              		.loc 1 329 3 is_stmt 1 view .LVU303
 329:Core/Src/main.cpp ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 1241              		.loc 1 329 25 is_stmt 0 view .LVU304
 1242 0018 8361     		str	r3, [r0, #24]
 330:Core/Src/main.cpp ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1243              		.loc 1 330 3 is_stmt 1 view .LVU305
 330:Core/Src/main.cpp ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1244              		.loc 1 330 28 is_stmt 0 view .LVU306
 1245 001a C361     		str	r3, [r0, #28]
 331:Core/Src/main.cpp ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1246              		.loc 1 331 3 is_stmt 1 view .LVU307
 331:Core/Src/main.cpp ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 1247              		.loc 1 331 30 is_stmt 0 view .LVU308
 1248 001c 0362     		str	r3, [r0, #32]
 332:Core/Src/main.cpp ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1249              		.loc 1 332 3 is_stmt 1 view .LVU309
 332:Core/Src/main.cpp ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1250              		.loc 1 332 30 is_stmt 0 view .LVU310
 1251 001e 4362     		str	r3, [r0, #36]
 333:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1252              		.loc 1 333 3 is_stmt 1 view .LVU311
 333:Core/Src/main.cpp ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 1253              		.loc 1 333 38 is_stmt 0 view .LVU312
 1254 0020 8362     		str	r3, [r0, #40]
 334:Core/Src/main.cpp ****   {
 1255              		.loc 1 334 3 is_stmt 1 view .LVU313
 334:Core/Src/main.cpp ****   {
 1256              		.loc 1 334 20 is_stmt 0 view .LVU314
 1257 0022 FFF7FEFF 		bl	HAL_UART_Init
 1258              	.LVL90:
 334:Core/Src/main.cpp ****   {
 1259              		.loc 1 334 3 view .LVU315
 1260 0026 0028     		cmp	r0, #0
 1261 0028 11D1     		bne	.L58
 338:Core/Src/main.cpp ****   {
 1262              		.loc 1 338 3 is_stmt 1 view .LVU316
 338:Core/Src/main.cpp ****   {
 1263              		.loc 1 338 36 is_stmt 0 view .LVU317
 1264 002a 0D48     		ldr	r0, .L62
 1265 002c 0021     		movs	r1, #0
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 39


 1266 002e FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 1267              	.LVL91:
 338:Core/Src/main.cpp ****   {
 1268              		.loc 1 338 3 view .LVU318
 1269 0032 0028     		cmp	r0, #0
 1270 0034 0DD1     		bne	.L59
 342:Core/Src/main.cpp ****   {
 1271              		.loc 1 342 3 is_stmt 1 view .LVU319
 342:Core/Src/main.cpp ****   {
 1272              		.loc 1 342 36 is_stmt 0 view .LVU320
 1273 0036 0A48     		ldr	r0, .L62
 1274 0038 0021     		movs	r1, #0
 1275 003a FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 1276              	.LVL92:
 342:Core/Src/main.cpp ****   {
 1277              		.loc 1 342 3 view .LVU321
 1278 003e 0028     		cmp	r0, #0
 1279 0040 09D1     		bne	.L60
 346:Core/Src/main.cpp ****   {
 1280              		.loc 1 346 3 is_stmt 1 view .LVU322
 346:Core/Src/main.cpp ****   {
 1281              		.loc 1 346 33 is_stmt 0 view .LVU323
 1282 0042 0748     		ldr	r0, .L62
 1283 0044 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 1284              	.LVL93:
 346:Core/Src/main.cpp ****   {
 1285              		.loc 1 346 3 view .LVU324
 1286 0048 0028     		cmp	r0, #0
 1287 004a 06D1     		bne	.L61
 354:Core/Src/main.cpp **** 
 1288              		.loc 1 354 1 view .LVU325
 1289              		@ sp needed
 1290 004c 10BD     		pop	{r4, pc}
 1291              	.L58:
 336:Core/Src/main.cpp ****   }
 1292              		.loc 1 336 5 is_stmt 1 view .LVU326
 336:Core/Src/main.cpp ****   }
 1293              		.loc 1 336 18 is_stmt 0 view .LVU327
 1294 004e FFF7FEFF 		bl	Error_Handler
 1295              	.LVL94:
 1296              	.L59:
 340:Core/Src/main.cpp ****   }
 1297              		.loc 1 340 5 is_stmt 1 view .LVU328
 340:Core/Src/main.cpp ****   }
 1298              		.loc 1 340 18 is_stmt 0 view .LVU329
 1299 0052 FFF7FEFF 		bl	Error_Handler
 1300              	.LVL95:
 1301              	.L60:
 344:Core/Src/main.cpp ****   }
 1302              		.loc 1 344 5 is_stmt 1 view .LVU330
 344:Core/Src/main.cpp ****   }
 1303              		.loc 1 344 18 is_stmt 0 view .LVU331
 1304 0056 FFF7FEFF 		bl	Error_Handler
 1305              	.LVL96:
 1306              	.L61:
 348:Core/Src/main.cpp ****   }
 1307              		.loc 1 348 5 is_stmt 1 view .LVU332
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 40


 348:Core/Src/main.cpp ****   }
 1308              		.loc 1 348 18 is_stmt 0 view .LVU333
 1309 005a FFF7FEFF 		bl	Error_Handler
 1310              	.LVL97:
 1311              	.L63:
 1312 005e C046     		.align	2
 1313              	.L62:
 1314 0060 00000000 		.word	huart1
 1315 0064 00380140 		.word	1073821696
 1316 0068 127A0000 		.word	31250
 1317              		.cfi_endproc
 1318              	.LFE393:
 1319              		.fnend
 1321              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
 1322              		.align	1
 1323              		.global	_Z18SystemClock_Configv
 1324              		.syntax unified
 1325              		.code	16
 1326              		.thumb_func
 1328              	_Z18SystemClock_Configv:
 1329              		.fnstart
 1330              	.LFB392:
 273:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1331              		.loc 1 273 1 is_stmt 1 view -0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 72
 1334              		@ frame_needed = 0, uses_anonymous_args = 0
 1335 0000 00B5     		push	{lr}
 1336              		.save {lr}
 1337              	.LCFI19:
 1338              		.cfi_def_cfa_offset 4
 1339              		.cfi_offset 14, -4
 1340              		.pad #76
 1341 0002 93B0     		sub	sp, sp, #76
 1342              	.LCFI20:
 1343              		.cfi_def_cfa_offset 80
 274:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1344              		.loc 1 274 3 view .LVU335
 274:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1345              		.loc 1 274 22 is_stmt 0 view .LVU336
 1346 0004 3422     		movs	r2, #52
 1347 0006 0021     		movs	r1, #0
 1348 0008 05A8     		add	r0, sp, #20
 1349 000a FFF7FEFF 		bl	memset
 1350              	.LVL98:
 275:Core/Src/main.cpp **** 
 1351              		.loc 1 275 3 is_stmt 1 view .LVU337
 275:Core/Src/main.cpp **** 
 1352              		.loc 1 275 22 is_stmt 0 view .LVU338
 1353 000e 1022     		movs	r2, #16
 1354 0010 0021     		movs	r1, #0
 1355 0012 01A8     		add	r0, sp, #4
 1356 0014 FFF7FEFF 		bl	memset
 1357              	.LVL99:
 279:Core/Src/main.cpp **** 
 1358              		.loc 1 279 3 is_stmt 1 view .LVU339
 279:Core/Src/main.cpp **** 
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 41


 1359              		.loc 1 279 34 is_stmt 0 view .LVU340
 1360 0018 8020     		movs	r0, #128
 1361 001a 8000     		lsls	r0, r0, #2
 1362 001c FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 1363              	.LVL100:
 284:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1364              		.loc 1 284 3 is_stmt 1 view .LVU341
 284:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1365              		.loc 1 284 36 is_stmt 0 view .LVU342
 1366 0020 0223     		movs	r3, #2
 1367 0022 0593     		str	r3, [sp, #20]
 285:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 1368              		.loc 1 285 3 is_stmt 1 view .LVU343
 285:Core/Src/main.cpp ****   RCC_OscInitStruct.HSIDiv = RCC_HSI_DIV1;
 1369              		.loc 1 285 30 is_stmt 0 view .LVU344
 1370 0024 FE33     		adds	r3, r3, #254
 1371 0026 0893     		str	r3, [sp, #32]
 286:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1372              		.loc 1 286 3 is_stmt 1 view .LVU345
 286:Core/Src/main.cpp ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1373              		.loc 1 286 28 is_stmt 0 view .LVU346
 1374 0028 0023     		movs	r3, #0
 1375 002a 0993     		str	r3, [sp, #36]
 287:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1376              		.loc 1 287 3 is_stmt 1 view .LVU347
 287:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1377              		.loc 1 287 41 is_stmt 0 view .LVU348
 1378 002c 4022     		movs	r2, #64
 1379 002e 0A92     		str	r2, [sp, #40]
 288:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1380              		.loc 1 288 3 is_stmt 1 view .LVU349
 288:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1381              		.loc 1 288 34 is_stmt 0 view .LVU350
 1382 0030 0C93     		str	r3, [sp, #48]
 289:Core/Src/main.cpp ****   {
 1383              		.loc 1 289 3 is_stmt 1 view .LVU351
 289:Core/Src/main.cpp ****   {
 1384              		.loc 1 289 24 is_stmt 0 view .LVU352
 1385 0032 05A8     		add	r0, sp, #20
 1386 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1387              	.LVL101:
 289:Core/Src/main.cpp ****   {
 1388              		.loc 1 289 3 view .LVU353
 1389 0038 0028     		cmp	r0, #0
 1390 003a 0DD1     		bne	.L67
 296:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 1391              		.loc 1 296 3 is_stmt 1 view .LVU354
 296:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1;
 1392              		.loc 1 296 31 is_stmt 0 view .LVU355
 1393 003c 0723     		movs	r3, #7
 1394 003e 0193     		str	r3, [sp, #4]
 298:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1395              		.loc 1 298 3 is_stmt 1 view .LVU356
 298:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1396              		.loc 1 298 34 is_stmt 0 view .LVU357
 1397 0040 0023     		movs	r3, #0
 1398 0042 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 42


 299:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1399              		.loc 1 299 3 is_stmt 1 view .LVU358
 299:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1400              		.loc 1 299 35 is_stmt 0 view .LVU359
 1401 0044 0393     		str	r3, [sp, #12]
 300:Core/Src/main.cpp **** 
 1402              		.loc 1 300 3 is_stmt 1 view .LVU360
 300:Core/Src/main.cpp **** 
 1403              		.loc 1 300 36 is_stmt 0 view .LVU361
 1404 0046 0493     		str	r3, [sp, #16]
 302:Core/Src/main.cpp ****   {
 1405              		.loc 1 302 3 is_stmt 1 view .LVU362
 302:Core/Src/main.cpp ****   {
 1406              		.loc 1 302 26 is_stmt 0 view .LVU363
 1407 0048 0021     		movs	r1, #0
 1408 004a 01A8     		add	r0, sp, #4
 1409 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1410              	.LVL102:
 302:Core/Src/main.cpp ****   {
 1411              		.loc 1 302 3 view .LVU364
 1412 0050 0028     		cmp	r0, #0
 1413 0052 03D1     		bne	.L68
 306:Core/Src/main.cpp **** 
 1414              		.loc 1 306 1 view .LVU365
 1415 0054 13B0     		add	sp, sp, #76
 1416              		@ sp needed
 1417 0056 00BD     		pop	{pc}
 1418              	.L67:
 291:Core/Src/main.cpp ****   }
 1419              		.loc 1 291 5 is_stmt 1 view .LVU366
 291:Core/Src/main.cpp ****   }
 1420              		.loc 1 291 18 is_stmt 0 view .LVU367
 1421 0058 FFF7FEFF 		bl	Error_Handler
 1422              	.LVL103:
 1423              	.L68:
 304:Core/Src/main.cpp ****   }
 1424              		.loc 1 304 5 is_stmt 1 view .LVU368
 304:Core/Src/main.cpp ****   }
 1425              		.loc 1 304 18 is_stmt 0 view .LVU369
 1426 005c FFF7FEFF 		bl	Error_Handler
 1427              	.LVL104:
 1428              		.cfi_endproc
 1429              	.LFE392:
 1430              		.fnend
 1432              		.section	.text.main,"ax",%progbits
 1433              		.align	1
 1434              		.global	main
 1435              		.syntax unified
 1436              		.code	16
 1437              		.thumb_func
 1439              	main:
 1440              		.fnstart
 1441              	.LFB391:
 103:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 1442              		.loc 1 103 1 is_stmt 1 view -0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 43


 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 1446 0000 30B5     		push	{r4, r5, lr}
 1447              		.save {r4, r5, lr}
 1448              	.LCFI21:
 1449              		.cfi_def_cfa_offset 12
 1450              		.cfi_offset 4, -12
 1451              		.cfi_offset 5, -8
 1452              		.cfi_offset 14, -4
 1453              		.pad #36
 1454 0002 89B0     		sub	sp, sp, #36
 1455              	.LCFI22:
 1456              		.cfi_def_cfa_offset 48
 111:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
 1457              		.loc 1 111 3 view .LVU371
 111:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
 1458              		.loc 1 111 11 is_stmt 0 view .LVU372
 1459 0004 FFF7FEFF 		bl	HAL_Init
 1460              	.LVL105:
 113:Core/Src/main.cpp ****   /* USER CODE END Init */
 1461              		.loc 1 113 3 is_stmt 1 view .LVU373
 117:Core/Src/main.cpp **** 
 1462              		.loc 1 117 3 view .LVU374
 117:Core/Src/main.cpp **** 
 1463              		.loc 1 117 21 is_stmt 0 view .LVU375
 1464 0008 FFF7FEFF 		bl	_Z18SystemClock_Configv
 1465              	.LVL106:
 124:Core/Src/main.cpp ****   MX_DMA_Init();
 1466              		.loc 1 124 3 is_stmt 1 view .LVU376
 124:Core/Src/main.cpp ****   MX_DMA_Init();
 1467              		.loc 1 124 15 is_stmt 0 view .LVU377
 1468 000c FFF7FEFF 		bl	_ZL12MX_GPIO_Initv
 1469              	.LVL107:
 125:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 1470              		.loc 1 125 3 is_stmt 1 view .LVU378
 125:Core/Src/main.cpp ****   MX_USART1_UART_Init();
 1471              		.loc 1 125 14 is_stmt 0 view .LVU379
 1472 0010 FFF7FEFF 		bl	_ZL11MX_DMA_Initv
 1473              	.LVL108:
 126:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 1474              		.loc 1 126 3 is_stmt 1 view .LVU380
 126:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 1475              		.loc 1 126 22 is_stmt 0 view .LVU381
 1476 0014 FFF7FEFF 		bl	_ZL19MX_USART1_UART_Initv
 1477              	.LVL109:
 128:Core/Src/main.cpp ****   //Flash_Write_NUM(ADDR_FLASH_PAGE_20, channel_write);
 1478              		.loc 1 128 3 is_stmt 1 view .LVU382
 128:Core/Src/main.cpp ****   //Flash_Write_NUM(ADDR_FLASH_PAGE_20, channel_write);
 1479              		.loc 1 128 19 is_stmt 0 view .LVU383
 1480 0018 FFF7FEFF 		bl	HAL_FLASH_Unlock
 1481              	.LVL110:
 132:Core/Src/main.cpp ****   FLASH_EraseInitStruct.TypeErase = FLASH_TYPEERASE_PAGES;    //Erase type set to erase pages( Avai
 1482              		.loc 1 132 3 is_stmt 1 view .LVU384
 132:Core/Src/main.cpp ****   FLASH_EraseInitStruct.TypeErase = FLASH_TYPEERASE_PAGES;    //Erase type set to erase pages( Avai
 1483              		.loc 1 132 26 is_stmt 0 view .LVU385
 1484 001c 1022     		movs	r2, #16
 1485 001e 0021     		movs	r1, #0
 1486 0020 04A8     		add	r0, sp, #16
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 44


 1487 0022 FFF7FEFF 		bl	memset
 1488              	.LVL111:
 133:Core/Src/main.cpp ****   FLASH_EraseInitStruct.Page = 31;            //Starting address of flash page (0x0800 0000 - 0x080
 1489              		.loc 1 133 3 is_stmt 1 view .LVU386
 133:Core/Src/main.cpp ****   FLASH_EraseInitStruct.Page = 31;            //Starting address of flash page (0x0800 0000 - 0x080
 1490              		.loc 1 133 35 is_stmt 0 view .LVU387
 1491 0026 0223     		movs	r3, #2
 1492 0028 0493     		str	r3, [sp, #16]
 134:Core/Src/main.cpp ****   FLASH_EraseInitStruct.NbPages = 1;                    //The number of pages to be erased         
 1493              		.loc 1 134 3 is_stmt 1 view .LVU388
 134:Core/Src/main.cpp ****   FLASH_EraseInitStruct.NbPages = 1;                    //The number of pages to be erased         
 1494              		.loc 1 134 30 is_stmt 0 view .LVU389
 1495 002a 1D33     		adds	r3, r3, #29
 1496 002c 0693     		str	r3, [sp, #24]
 135:Core/Src/main.cpp ****   uint32_t  errorStatus = 0;
 1497              		.loc 1 135 3 is_stmt 1 view .LVU390
 135:Core/Src/main.cpp ****   uint32_t  errorStatus = 0;
 1498              		.loc 1 135 33 is_stmt 0 view .LVU391
 1499 002e 1E3B     		subs	r3, r3, #30
 1500 0030 0793     		str	r3, [sp, #28]
 136:Core/Src/main.cpp ****   //HAL_FLASHEx_Erase(&FLASH_EraseInitStruct,&errorStatus);
 1501              		.loc 1 136 3 is_stmt 1 view .LVU392
 136:Core/Src/main.cpp ****   //HAL_FLASHEx_Erase(&FLASH_EraseInitStruct,&errorStatus);
 1502              		.loc 1 136 13 is_stmt 0 view .LVU393
 1503 0032 0023     		movs	r3, #0
 1504 0034 0393     		str	r3, [sp, #12]
 145:Core/Src/main.cpp ****   midi_channel = *RDAddr;
 1505              		.loc 1 145 3 is_stmt 1 view .LVU394
 1506              	.LVL112:
 146:Core/Src/main.cpp ****   
 1507              		.loc 1 146 3 view .LVU395
 146:Core/Src/main.cpp ****   
 1508              		.loc 1 146 18 is_stmt 0 view .LVU396
 1509 0036 974B     		ldr	r3, .L102
 1510 0038 1868     		ldr	r0, [r3]
 1511 003a 5968     		ldr	r1, [r3, #4]
 146:Core/Src/main.cpp ****   
 1512              		.loc 1 146 16 view .LVU397
 1513 003c 964B     		ldr	r3, .L102+4
 1514 003e 1860     		str	r0, [r3]
 1515 0040 5960     		str	r1, [r3, #4]
 151:Core/Src/main.cpp ****   {
 1516              		.loc 1 151 3 is_stmt 1 view .LVU398
 151:Core/Src/main.cpp ****   {
 1517              		.loc 1 151 23 is_stmt 0 view .LVU399
 1518 0042 A020     		movs	r0, #160
 1519 0044 0821     		movs	r1, #8
 1520 0046 C005     		lsls	r0, r0, #23
 1521 0048 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1522              	.LVL113:
 151:Core/Src/main.cpp ****   {
 1523              		.loc 1 151 3 view .LVU400
 1524 004c 0128     		cmp	r0, #1
 1525 004e 01D0     		beq	.L94
 1526              	.L70:
 103:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
 1527              		.loc 1 103 1 view .LVU401
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 45


 1528 0050 0024     		movs	r4, #0
 1529 0052 2DE0     		b	.L76
 1530              	.L94:
 153:Core/Src/main.cpp ****     if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3) == GPIO_PIN_SET)
 1531              		.loc 1 153 5 is_stmt 1 view .LVU402
 153:Core/Src/main.cpp ****     if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_3) == GPIO_PIN_SET)
 1532              		.loc 1 153 14 is_stmt 0 view .LVU403
 1533 0054 9148     		ldr	r0, .L102+8
 1534 0056 FFF7FEFF 		bl	HAL_Delay
 1535              	.LVL114:
 154:Core/Src/main.cpp ****       setChannel = 1;
 1536              		.loc 1 154 5 is_stmt 1 view .LVU404
 154:Core/Src/main.cpp ****       setChannel = 1;
 1537              		.loc 1 154 24 is_stmt 0 view .LVU405
 1538 005a A020     		movs	r0, #160
 1539 005c 0821     		movs	r1, #8
 1540 005e C005     		lsls	r0, r0, #23
 1541 0060 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1542              	.LVL115:
 154:Core/Src/main.cpp ****       setChannel = 1;
 1543              		.loc 1 154 5 view .LVU406
 1544 0064 0128     		cmp	r0, #1
 1545 0066 0AD0     		beq	.L95
 1546              	.L71:
 156:Core/Src/main.cpp ****     displayChannel(midi_channel, LED1_GPIO_Port, LED1_Pin);
 1547              		.loc 1 156 5 is_stmt 1 view .LVU407
 156:Core/Src/main.cpp ****     displayChannel(midi_channel, LED1_GPIO_Port, LED1_Pin);
 1548              		.loc 1 156 14 is_stmt 0 view .LVU408
 1549 0068 8C48     		ldr	r0, .L102+8
 1550 006a FFF7FEFF 		bl	HAL_Delay
 1551              	.LVL116:
 157:Core/Src/main.cpp ****   }
 1552              		.loc 1 157 5 is_stmt 1 view .LVU409
 157:Core/Src/main.cpp ****   }
 1553              		.loc 1 157 19 is_stmt 0 view .LVU410
 1554 006e A021     		movs	r1, #160
 1555 0070 894B     		ldr	r3, .L102+4
 1556 0072 0222     		movs	r2, #2
 1557 0074 C905     		lsls	r1, r1, #23
 1558 0076 1868     		ldr	r0, [r3]
 1559 0078 FFF7FEFF 		bl	_Z14displayChanneliP12GPIO_TypeDeft
 1560              	.LVL117:
 1561 007c E8E7     		b	.L70
 1562              	.L95:
 155:Core/Src/main.cpp ****     HAL_Delay(3000);
 1563              		.loc 1 155 7 is_stmt 1 view .LVU411
 155:Core/Src/main.cpp ****     HAL_Delay(3000);
 1564              		.loc 1 155 18 is_stmt 0 view .LVU412
 1565 007e 884B     		ldr	r3, .L102+12
 1566 0080 0122     		movs	r2, #1
 1567 0082 1A70     		strb	r2, [r3]
 1568 0084 F0E7     		b	.L71
 1569              	.LVL118:
 1570              	.L93:
 166:Core/Src/main.cpp ****       }
 1571              		.loc 1 166 9 is_stmt 1 view .LVU413
 166:Core/Src/main.cpp ****       }
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 46


 1572              		.loc 1 166 22 is_stmt 0 view .LVU414
 1573 0086 844B     		ldr	r3, .L102+4
 1574 0088 0120     		movs	r0, #1
 1575 008a 0021     		movs	r1, #0
 1576 008c 1860     		str	r0, [r3]
 1577 008e 5960     		str	r1, [r3, #4]
 1578              	.L73:
 168:Core/Src/main.cpp ****       lastPressMillis = HAL_GetTick();
 1579              		.loc 1 168 7 is_stmt 1 view .LVU415
 168:Core/Src/main.cpp ****       lastPressMillis = HAL_GetTick();
 1580              		.loc 1 168 21 is_stmt 0 view .LVU416
 1581 0090 A021     		movs	r1, #160
 1582 0092 814B     		ldr	r3, .L102+4
 1583 0094 1868     		ldr	r0, [r3]
 1584 0096 0222     		movs	r2, #2
 1585 0098 C905     		lsls	r1, r1, #23
 1586 009a FFF7FEFF 		bl	_Z14displayChanneliP12GPIO_TypeDeft
 1587              	.LVL119:
 169:Core/Src/main.cpp ****     }
 1588              		.loc 1 169 7 is_stmt 1 view .LVU417
 169:Core/Src/main.cpp ****     }
 1589              		.loc 1 169 36 is_stmt 0 view .LVU418
 1590 009e FFF7FEFF 		bl	HAL_GetTick
 1591              	.LVL120:
 169:Core/Src/main.cpp ****     }
 1592              		.loc 1 169 23 view .LVU419
 1593 00a2 84B2     		uxth	r4, r0
 1594              	.LVL121:
 1595              	.L72:
 171:Core/Src/main.cpp ****     {
 1596              		.loc 1 171 5 is_stmt 1 view .LVU420
 171:Core/Src/main.cpp ****     {
 1597              		.loc 1 171 20 is_stmt 0 view .LVU421
 1598 00a4 FFF7FEFF 		bl	HAL_GetTick
 1599              	.LVL122:
 171:Core/Src/main.cpp ****     {
 1600              		.loc 1 171 23 view .LVU422
 1601 00a8 001B     		subs	r0, r0, r4
 171:Core/Src/main.cpp ****     {
 1602              		.loc 1 171 5 view .LVU423
 1603 00aa 7E4B     		ldr	r3, .L102+16
 1604 00ac 9842     		cmp	r0, r3
 1605 00ae 19D8     		bhi	.L96
 1606              	.LVL123:
 1607              	.L76:
 159:Core/Src/main.cpp ****   {
 1608              		.loc 1 159 3 is_stmt 1 view .LVU424
 1609 00b0 7B4B     		ldr	r3, .L102+12
 1610 00b2 1B78     		ldrb	r3, [r3]
 1611 00b4 002B     		cmp	r3, #0
 1612 00b6 2ED0     		beq	.L97
 161:Core/Src/main.cpp ****     {
 1613              		.loc 1 161 5 view .LVU425
 161:Core/Src/main.cpp ****     {
 1614              		.loc 1 161 24 is_stmt 0 view .LVU426
 1615 00b8 A020     		movs	r0, #160
 1616 00ba 0821     		movs	r1, #8
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 47


 1617 00bc C005     		lsls	r0, r0, #23
 1618 00be FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1619              	.LVL124:
 161:Core/Src/main.cpp ****     {
 1620              		.loc 1 161 5 view .LVU427
 1621 00c2 0128     		cmp	r0, #1
 1622 00c4 EED1     		bne	.L72
 163:Core/Src/main.cpp ****       if(midi_channel > 16)
 1623              		.loc 1 163 7 is_stmt 1 view .LVU428
 163:Core/Src/main.cpp ****       if(midi_channel > 16)
 1624              		.loc 1 163 19 is_stmt 0 view .LVU429
 1625 00c6 7449     		ldr	r1, .L102+4
 1626 00c8 0A68     		ldr	r2, [r1]
 1627 00ca 4B68     		ldr	r3, [r1, #4]
 1628 00cc 0124     		movs	r4, #1
 1629              	.LVL125:
 163:Core/Src/main.cpp ****       if(midi_channel > 16)
 1630              		.loc 1 163 19 view .LVU430
 1631 00ce 0025     		movs	r5, #0
 1632 00d0 1219     		adds	r2, r2, r4
 1633 00d2 6B41     		adcs	r3, r3, r5
 1634 00d4 0A60     		str	r2, [r1]
 1635 00d6 4B60     		str	r3, [r1, #4]
 164:Core/Src/main.cpp ****       {
 1636              		.loc 1 164 7 is_stmt 1 view .LVU431
 1637 00d8 002B     		cmp	r3, #0
 1638 00da D4D1     		bne	.L93
 1639 00dc D8D1     		bne	.L73
 1640 00de 102A     		cmp	r2, #16
 1641 00e0 D6D9     		bls	.L73
 1642 00e2 D0E7     		b	.L93
 1643              	.LVL126:
 1644              	.L96:
 173:Core/Src/main.cpp ****       //FLASH_PageErase(FLASH_BANK_1, ADDR_FLASH_PAGE_20);
 1645              		.loc 1 173 7 view .LVU432
 173:Core/Src/main.cpp ****       //FLASH_PageErase(FLASH_BANK_1, ADDR_FLASH_PAGE_20);
 1646              		.loc 1 173 21 is_stmt 0 view .LVU433
 1647 00e4 A021     		movs	r1, #160
 1648 00e6 0222     		movs	r2, #2
 1649 00e8 C905     		lsls	r1, r1, #23
 1650 00ea 0320     		movs	r0, #3
 1651 00ec FFF7FEFF 		bl	_Z14displayChanneliP12GPIO_TypeDeft
 1652              	.LVL127:
 178:Core/Src/main.cpp ****       HAL_FLASHEx_Erase(&FLASH_EraseInitStruct,&errorStatus);
 1653              		.loc 1 178 7 is_stmt 1 view .LVU434
 178:Core/Src/main.cpp ****       HAL_FLASHEx_Erase(&FLASH_EraseInitStruct,&errorStatus);
 1654              		.loc 1 178 23 is_stmt 0 view .LVU435
 1655 00f0 FFF7FEFF 		bl	HAL_FLASH_Unlock
 1656              	.LVL128:
 179:Core/Src/main.cpp ****       HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,ADDR_FLASH_PAGE_31, midi_channel);
 1657              		.loc 1 179 7 is_stmt 1 view .LVU436
 179:Core/Src/main.cpp ****       HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD,ADDR_FLASH_PAGE_31, midi_channel);
 1658              		.loc 1 179 24 is_stmt 0 view .LVU437
 1659 00f4 03A9     		add	r1, sp, #12
 1660 00f6 04A8     		add	r0, sp, #16
 1661 00f8 FFF7FEFF 		bl	HAL_FLASHEx_Erase
 1662              	.LVL129:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 48


 180:Core/Src/main.cpp ****       HAL_FLASH_Lock();
 1663              		.loc 1 180 7 is_stmt 1 view .LVU438
 180:Core/Src/main.cpp ****       HAL_FLASH_Lock();
 1664              		.loc 1 180 24 is_stmt 0 view .LVU439
 1665 00fc 664B     		ldr	r3, .L102+4
 1666 00fe 1A68     		ldr	r2, [r3]
 1667 0100 5B68     		ldr	r3, [r3, #4]
 1668 0102 6449     		ldr	r1, .L102
 1669 0104 0120     		movs	r0, #1
 1670 0106 FFF7FEFF 		bl	HAL_FLASH_Program
 1671              	.LVL130:
 181:Core/Src/main.cpp **** 
 1672              		.loc 1 181 7 is_stmt 1 view .LVU440
 181:Core/Src/main.cpp **** 
 1673              		.loc 1 181 21 is_stmt 0 view .LVU441
 1674 010a FFF7FEFF 		bl	HAL_FLASH_Lock
 1675              	.LVL131:
 183:Core/Src/main.cpp ****     }
 1676              		.loc 1 183 7 is_stmt 1 view .LVU442
 183:Core/Src/main.cpp ****     }
 1677              		.loc 1 183 18 is_stmt 0 view .LVU443
 1678 010e 644B     		ldr	r3, .L102+12
 1679 0110 0022     		movs	r2, #0
 1680 0112 1A70     		strb	r2, [r3]
 1681 0114 CCE7     		b	.L76
 1682              	.L97:
 187:Core/Src/main.cpp ****   /* USER CODE END 2 */
 1683              		.loc 1 187 3 is_stmt 1 view .LVU444
 187:Core/Src/main.cpp ****   /* USER CODE END 2 */
 1684              		.loc 1 187 23 is_stmt 0 view .LVU445
 1685 0116 6449     		ldr	r1, .L102+20
 1686 0118 6448     		ldr	r0, .L102+24
 1687 011a 0122     		movs	r2, #1
 1688 011c FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1689              	.LVL132:
 1690 0120 49E0     		b	.L90
 1691              	.LVL133:
 1692              	.L79:
 202:Core/Src/main.cpp ****         state1 = 1;
 1693              		.loc 1 202 9 is_stmt 1 view .LVU446
 202:Core/Src/main.cpp ****         state1 = 1;
 1694              		.loc 1 202 15 is_stmt 0 view .LVU447
 1695 0122 A020     		movs	r0, #160
 1696 0124 C005     		lsls	r0, r0, #23
 1697 0126 8023     		movs	r3, #128
 1698 0128 0193     		str	r3, [sp, #4]
 1699 012a 0090     		str	r0, [sp]
 1700 012c 603B     		subs	r3, r3, #96
 1701 012e 0200     		movs	r2, r0
 1702 0130 0221     		movs	r1, #2
 1703 0132 FFF7FEFF 		bl	_Z6turnOnP12GPIO_TypeDeftS0_tS0_t
 1704              	.LVL134:
 203:Core/Src/main.cpp ****       }
 1705              		.loc 1 203 9 is_stmt 1 view .LVU448
 203:Core/Src/main.cpp ****       }
 1706              		.loc 1 203 16 is_stmt 0 view .LVU449
 1707 0136 5E4B     		ldr	r3, .L102+28
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 49


 1708 0138 0122     		movs	r2, #1
 1709 013a 1A70     		strb	r2, [r3]
 1710 013c 53E0     		b	.L80
 1711              	.L100:
 212:Core/Src/main.cpp ****           state1 = 0;
 1712              		.loc 1 212 11 is_stmt 1 view .LVU450
 212:Core/Src/main.cpp ****           state1 = 0;
 1713              		.loc 1 212 18 is_stmt 0 view .LVU451
 1714 013e A020     		movs	r0, #160
 1715 0140 C005     		lsls	r0, r0, #23
 1716 0142 8023     		movs	r3, #128
 1717 0144 0193     		str	r3, [sp, #4]
 1718 0146 0090     		str	r0, [sp]
 1719 0148 603B     		subs	r3, r3, #96
 1720 014a 0200     		movs	r2, r0
 1721 014c 0221     		movs	r1, #2
 1722 014e FFF7FEFF 		bl	_Z7turnOffP12GPIO_TypeDeftS0_tS0_t
 1723              	.LVL135:
 213:Core/Src/main.cpp ****         }
 1724              		.loc 1 213 11 is_stmt 1 view .LVU452
 213:Core/Src/main.cpp ****         }
 1725              		.loc 1 213 18 is_stmt 0 view .LVU453
 1726 0152 574B     		ldr	r3, .L102+28
 1727 0154 0022     		movs	r2, #0
 1728 0156 1A70     		strb	r2, [r3]
 1729 0158 52E0     		b	.L82
 1730              	.L101:
 221:Core/Src/main.cpp ****           state1 = 1;
 1731              		.loc 1 221 11 is_stmt 1 view .LVU454
 221:Core/Src/main.cpp ****           state1 = 1;
 1732              		.loc 1 221 17 is_stmt 0 view .LVU455
 1733 015a A020     		movs	r0, #160
 1734 015c C005     		lsls	r0, r0, #23
 1735 015e 8033     		adds	r3, r3, #128
 1736 0160 0193     		str	r3, [sp, #4]
 1737 0162 0090     		str	r0, [sp]
 1738 0164 603B     		subs	r3, r3, #96
 1739 0166 0200     		movs	r2, r0
 1740 0168 0221     		movs	r1, #2
 1741 016a FFF7FEFF 		bl	_Z6turnOnP12GPIO_TypeDeftS0_tS0_t
 1742              	.LVL136:
 222:Core/Src/main.cpp ****         }
 1743              		.loc 1 222 11 is_stmt 1 view .LVU456
 222:Core/Src/main.cpp ****         }
 1744              		.loc 1 222 18 is_stmt 0 view .LVU457
 1745 016e 504B     		ldr	r3, .L102+28
 1746 0170 0122     		movs	r2, #1
 1747 0172 1A70     		strb	r2, [r3]
 1748 0174 4FE0     		b	.L84
 1749              	.L86:
 236:Core/Src/main.cpp ****         state2 = 1;
 1750              		.loc 1 236 9 is_stmt 1 view .LVU458
 236:Core/Src/main.cpp ****         state2 = 1;
 1751              		.loc 1 236 15 is_stmt 0 view .LVU459
 1752 0176 A020     		movs	r0, #160
 1753 0178 C005     		lsls	r0, r0, #23
 1754 017a 0124     		movs	r4, #1
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 50


 1755 017c 0194     		str	r4, [sp, #4]
 1756 017e 0090     		str	r0, [sp]
 1757 0180 4023     		movs	r3, #64
 1758 0182 0200     		movs	r2, r0
 1759 0184 0421     		movs	r1, #4
 1760 0186 FFF7FEFF 		bl	_Z6turnOnP12GPIO_TypeDeftS0_tS0_t
 1761              	.LVL137:
 237:Core/Src/main.cpp ****       }
 1762              		.loc 1 237 9 is_stmt 1 view .LVU460
 237:Core/Src/main.cpp ****       }
 1763              		.loc 1 237 16 is_stmt 0 view .LVU461
 1764 018a 4A4B     		ldr	r3, .L102+32
 1765 018c 1C70     		strb	r4, [r3]
 1766              	.L87:
 239:Core/Src/main.cpp ****       bTurnOn2 = 0;
 1767              		.loc 1 239 7 is_stmt 1 view .LVU462
 239:Core/Src/main.cpp ****       bTurnOn2 = 0;
 1768              		.loc 1 239 17 is_stmt 0 view .LVU463
 1769 018e 4A4B     		ldr	r3, .L102+36
 1770 0190 0022     		movs	r2, #0
 1771 0192 1A70     		strb	r2, [r3]
 240:Core/Src/main.cpp ****     }
 1772              		.loc 1 240 7 is_stmt 1 view .LVU464
 240:Core/Src/main.cpp ****     }
 1773              		.loc 1 240 16 is_stmt 0 view .LVU465
 1774 0194 494B     		ldr	r3, .L102+40
 1775 0196 1A70     		strb	r2, [r3]
 1776              	.L85:
 242:Core/Src/main.cpp ****     {
 1777              		.loc 1 242 5 is_stmt 1 view .LVU466
 242:Core/Src/main.cpp ****     {
 1778              		.loc 1 242 8 is_stmt 0 view .LVU467
 1779 0198 474B     		ldr	r3, .L102+36
 1780 019a 1B78     		ldrb	r3, [r3]
 242:Core/Src/main.cpp ****     {
 1781              		.loc 1 242 5 view .LVU468
 1782 019c 002B     		cmp	r3, #0
 1783 019e 06D0     		beq	.L88
 244:Core/Src/main.cpp ****         {
 1784              		.loc 1 244 7 is_stmt 1 view .LVU469
 244:Core/Src/main.cpp ****         {
 1785              		.loc 1 244 10 is_stmt 0 view .LVU470
 1786 01a0 444B     		ldr	r3, .L102+32
 1787 01a2 1B78     		ldrb	r3, [r3]
 244:Core/Src/main.cpp ****         {
 1788              		.loc 1 244 7 view .LVU471
 1789 01a4 002B     		cmp	r3, #0
 1790 01a6 52D1     		bne	.L98
 1791              	.L89:
 249:Core/Src/main.cpp ****     }
 1792              		.loc 1 249 7 is_stmt 1 view .LVU472
 249:Core/Src/main.cpp ****     }
 1793              		.loc 1 249 17 is_stmt 0 view .LVU473
 1794 01a8 434B     		ldr	r3, .L102+36
 1795 01aa 0022     		movs	r2, #0
 1796 01ac 1A70     		strb	r2, [r3]
 1797              	.L88:
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 51


 251:Core/Src/main.cpp ****     {
 1798              		.loc 1 251 5 is_stmt 1 view .LVU474
 251:Core/Src/main.cpp ****     {
 1799              		.loc 1 251 8 is_stmt 0 view .LVU475
 1800 01ae 434B     		ldr	r3, .L102+40
 1801 01b0 1B78     		ldrb	r3, [r3]
 251:Core/Src/main.cpp ****     {
 1802              		.loc 1 251 5 view .LVU476
 1803 01b2 002B     		cmp	r3, #0
 1804 01b4 59D1     		bne	.L99
 1805              	.L90:
 191:Core/Src/main.cpp ****   {
 1806              		.loc 1 191 3 is_stmt 1 view .LVU477
 193:Core/Src/main.cpp ****     {
 1807              		.loc 1 193 5 view .LVU478
 193:Core/Src/main.cpp ****     {
 1808              		.loc 1 193 16 is_stmt 0 view .LVU479
 1809 01b6 A020     		movs	r0, #160
 1810 01b8 0821     		movs	r1, #8
 1811 01ba C005     		lsls	r0, r0, #23
 1812 01bc FFF7FEFF 		bl	_Z8btnStateP12GPIO_TypeDeft
 1813              	.LVL138:
 193:Core/Src/main.cpp ****     {
 1814              		.loc 1 193 5 view .LVU480
 1815 01c0 0028     		cmp	r0, #0
 1816 01c2 15D0     		beq	.L78
 195:Core/Src/main.cpp ****       {
 1817              		.loc 1 195 7 is_stmt 1 view .LVU481
 195:Core/Src/main.cpp ****       {
 1818              		.loc 1 195 10 is_stmt 0 view .LVU482
 1819 01c4 3A4B     		ldr	r3, .L102+28
 1820 01c6 1B78     		ldrb	r3, [r3]
 195:Core/Src/main.cpp ****       {
 1821              		.loc 1 195 7 view .LVU483
 1822 01c8 002B     		cmp	r3, #0
 1823 01ca AAD0     		beq	.L79
 197:Core/Src/main.cpp ****         state1 = 0;
 1824              		.loc 1 197 9 is_stmt 1 view .LVU484
 197:Core/Src/main.cpp ****         state1 = 0;
 1825              		.loc 1 197 16 is_stmt 0 view .LVU485
 1826 01cc A020     		movs	r0, #160
 1827 01ce C005     		lsls	r0, r0, #23
 1828 01d0 8023     		movs	r3, #128
 1829 01d2 0193     		str	r3, [sp, #4]
 1830 01d4 0090     		str	r0, [sp]
 1831 01d6 603B     		subs	r3, r3, #96
 1832 01d8 0200     		movs	r2, r0
 1833 01da 0221     		movs	r1, #2
 1834 01dc FFF7FEFF 		bl	_Z7turnOffP12GPIO_TypeDeftS0_tS0_t
 1835              	.LVL139:
 198:Core/Src/main.cpp ****       }
 1836              		.loc 1 198 9 is_stmt 1 view .LVU486
 198:Core/Src/main.cpp ****       }
 1837              		.loc 1 198 16 is_stmt 0 view .LVU487
 1838 01e0 334B     		ldr	r3, .L102+28
 1839 01e2 0022     		movs	r2, #0
 1840 01e4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 52


 1841              	.L80:
 205:Core/Src/main.cpp ****       bTurnOn1 = 0;
 1842              		.loc 1 205 7 is_stmt 1 view .LVU488
 205:Core/Src/main.cpp ****       bTurnOn1 = 0;
 1843              		.loc 1 205 17 is_stmt 0 view .LVU489
 1844 01e6 364B     		ldr	r3, .L102+44
 1845 01e8 0022     		movs	r2, #0
 1846 01ea 1A70     		strb	r2, [r3]
 206:Core/Src/main.cpp ****     }
 1847              		.loc 1 206 7 is_stmt 1 view .LVU490
 206:Core/Src/main.cpp ****     }
 1848              		.loc 1 206 16 is_stmt 0 view .LVU491
 1849 01ec 354B     		ldr	r3, .L102+48
 1850 01ee 1A70     		strb	r2, [r3]
 1851              	.L78:
 208:Core/Src/main.cpp ****     {
 1852              		.loc 1 208 5 is_stmt 1 view .LVU492
 208:Core/Src/main.cpp ****     {
 1853              		.loc 1 208 8 is_stmt 0 view .LVU493
 1854 01f0 334B     		ldr	r3, .L102+44
 1855 01f2 1B78     		ldrb	r3, [r3]
 208:Core/Src/main.cpp ****     {
 1856              		.loc 1 208 5 view .LVU494
 1857 01f4 002B     		cmp	r3, #0
 1858 01f6 06D0     		beq	.L81
 210:Core/Src/main.cpp ****         {
 1859              		.loc 1 210 7 is_stmt 1 view .LVU495
 210:Core/Src/main.cpp ****         {
 1860              		.loc 1 210 10 is_stmt 0 view .LVU496
 1861 01f8 2D4B     		ldr	r3, .L102+28
 1862 01fa 1B78     		ldrb	r3, [r3]
 210:Core/Src/main.cpp ****         {
 1863              		.loc 1 210 7 view .LVU497
 1864 01fc 002B     		cmp	r3, #0
 1865 01fe 9ED1     		bne	.L100
 1866              	.L82:
 215:Core/Src/main.cpp ****     }
 1867              		.loc 1 215 7 is_stmt 1 view .LVU498
 215:Core/Src/main.cpp ****     }
 1868              		.loc 1 215 17 is_stmt 0 view .LVU499
 1869 0200 2F4B     		ldr	r3, .L102+44
 1870 0202 0022     		movs	r2, #0
 1871 0204 1A70     		strb	r2, [r3]
 1872              	.L81:
 217:Core/Src/main.cpp ****     {
 1873              		.loc 1 217 5 is_stmt 1 view .LVU500
 217:Core/Src/main.cpp ****     {
 1874              		.loc 1 217 8 is_stmt 0 view .LVU501
 1875 0206 2F4B     		ldr	r3, .L102+48
 1876 0208 1B78     		ldrb	r3, [r3]
 217:Core/Src/main.cpp ****     {
 1877              		.loc 1 217 5 view .LVU502
 1878 020a 002B     		cmp	r3, #0
 1879 020c 06D0     		beq	.L83
 219:Core/Src/main.cpp ****         {
 1880              		.loc 1 219 7 is_stmt 1 view .LVU503
 219:Core/Src/main.cpp ****         {
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 53


 1881              		.loc 1 219 10 is_stmt 0 view .LVU504
 1882 020e 284B     		ldr	r3, .L102+28
 1883 0210 1B78     		ldrb	r3, [r3]
 219:Core/Src/main.cpp ****         {
 1884              		.loc 1 219 7 view .LVU505
 1885 0212 002B     		cmp	r3, #0
 1886 0214 A1D0     		beq	.L101
 1887              	.L84:
 224:Core/Src/main.cpp ****     }
 1888              		.loc 1 224 7 is_stmt 1 view .LVU506
 224:Core/Src/main.cpp ****     }
 1889              		.loc 1 224 16 is_stmt 0 view .LVU507
 1890 0216 2B4B     		ldr	r3, .L102+48
 1891 0218 0022     		movs	r2, #0
 1892 021a 1A70     		strb	r2, [r3]
 1893              	.L83:
 227:Core/Src/main.cpp ****     {
 1894              		.loc 1 227 5 is_stmt 1 view .LVU508
 227:Core/Src/main.cpp ****     {
 1895              		.loc 1 227 16 is_stmt 0 view .LVU509
 1896 021c A020     		movs	r0, #160
 1897 021e 1021     		movs	r1, #16
 1898 0220 C005     		lsls	r0, r0, #23
 1899 0222 FFF7FEFF 		bl	_Z8btnStateP12GPIO_TypeDeft
 1900              	.LVL140:
 227:Core/Src/main.cpp ****     {
 1901              		.loc 1 227 5 view .LVU510
 1902 0226 0028     		cmp	r0, #0
 1903 0228 B6D0     		beq	.L85
 229:Core/Src/main.cpp ****       {
 1904              		.loc 1 229 7 is_stmt 1 view .LVU511
 229:Core/Src/main.cpp ****       {
 1905              		.loc 1 229 10 is_stmt 0 view .LVU512
 1906 022a 224B     		ldr	r3, .L102+32
 1907 022c 1B78     		ldrb	r3, [r3]
 229:Core/Src/main.cpp ****       {
 1908              		.loc 1 229 7 view .LVU513
 1909 022e 002B     		cmp	r3, #0
 1910 0230 A1D0     		beq	.L86
 231:Core/Src/main.cpp ****         state2 = 0;
 1911              		.loc 1 231 9 is_stmt 1 view .LVU514
 231:Core/Src/main.cpp ****         state2 = 0;
 1912              		.loc 1 231 16 is_stmt 0 view .LVU515
 1913 0232 A020     		movs	r0, #160
 1914 0234 C005     		lsls	r0, r0, #23
 1915 0236 0123     		movs	r3, #1
 1916 0238 0193     		str	r3, [sp, #4]
 1917 023a 0090     		str	r0, [sp]
 1918 023c 3F33     		adds	r3, r3, #63
 1919 023e 0200     		movs	r2, r0
 1920 0240 0421     		movs	r1, #4
 1921 0242 FFF7FEFF 		bl	_Z7turnOffP12GPIO_TypeDeftS0_tS0_t
 1922              	.LVL141:
 232:Core/Src/main.cpp ****       }
 1923              		.loc 1 232 9 is_stmt 1 view .LVU516
 232:Core/Src/main.cpp ****       }
 1924              		.loc 1 232 16 is_stmt 0 view .LVU517
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 54


 1925 0246 1B4B     		ldr	r3, .L102+32
 1926 0248 0022     		movs	r2, #0
 1927 024a 1A70     		strb	r2, [r3]
 1928 024c 9FE7     		b	.L87
 1929              	.L98:
 246:Core/Src/main.cpp ****           state2 = 0;
 1930              		.loc 1 246 11 is_stmt 1 view .LVU518
 246:Core/Src/main.cpp ****           state2 = 0;
 1931              		.loc 1 246 18 is_stmt 0 view .LVU519
 1932 024e A020     		movs	r0, #160
 1933 0250 C005     		lsls	r0, r0, #23
 1934 0252 0123     		movs	r3, #1
 1935 0254 0193     		str	r3, [sp, #4]
 1936 0256 0090     		str	r0, [sp]
 1937 0258 3F33     		adds	r3, r3, #63
 1938 025a 0200     		movs	r2, r0
 1939 025c 0421     		movs	r1, #4
 1940 025e FFF7FEFF 		bl	_Z7turnOffP12GPIO_TypeDeftS0_tS0_t
 1941              	.LVL142:
 247:Core/Src/main.cpp ****         }
 1942              		.loc 1 247 11 is_stmt 1 view .LVU520
 247:Core/Src/main.cpp ****         }
 1943              		.loc 1 247 18 is_stmt 0 view .LVU521
 1944 0262 144B     		ldr	r3, .L102+32
 1945 0264 0022     		movs	r2, #0
 1946 0266 1A70     		strb	r2, [r3]
 1947 0268 9EE7     		b	.L89
 1948              	.L99:
 253:Core/Src/main.cpp ****         {
 1949              		.loc 1 253 7 is_stmt 1 view .LVU522
 253:Core/Src/main.cpp ****         {
 1950              		.loc 1 253 10 is_stmt 0 view .LVU523
 1951 026a 124B     		ldr	r3, .L102+32
 1952 026c 1B78     		ldrb	r3, [r3]
 253:Core/Src/main.cpp ****         {
 1953              		.loc 1 253 7 view .LVU524
 1954 026e 002B     		cmp	r3, #0
 1955 0270 0BD1     		bne	.L91
 255:Core/Src/main.cpp ****           state2 = 1;
 1956              		.loc 1 255 11 is_stmt 1 view .LVU525
 255:Core/Src/main.cpp ****           state2 = 1;
 1957              		.loc 1 255 17 is_stmt 0 view .LVU526
 1958 0272 A020     		movs	r0, #160
 1959 0274 C005     		lsls	r0, r0, #23
 1960 0276 0124     		movs	r4, #1
 1961 0278 0194     		str	r4, [sp, #4]
 1962 027a 0090     		str	r0, [sp]
 1963 027c 4033     		adds	r3, r3, #64
 1964 027e 0200     		movs	r2, r0
 1965 0280 0421     		movs	r1, #4
 1966 0282 FFF7FEFF 		bl	_Z6turnOnP12GPIO_TypeDeftS0_tS0_t
 1967              	.LVL143:
 256:Core/Src/main.cpp ****         }
 1968              		.loc 1 256 11 is_stmt 1 view .LVU527
 256:Core/Src/main.cpp ****         }
 1969              		.loc 1 256 18 is_stmt 0 view .LVU528
 1970 0286 0B4B     		ldr	r3, .L102+32
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 55


 1971 0288 1C70     		strb	r4, [r3]
 1972              	.L91:
 258:Core/Src/main.cpp ****     }
 1973              		.loc 1 258 7 is_stmt 1 view .LVU529
 258:Core/Src/main.cpp ****     }
 1974              		.loc 1 258 16 is_stmt 0 view .LVU530
 1975 028a 0C4B     		ldr	r3, .L102+40
 1976 028c 0022     		movs	r2, #0
 1977 028e 1A70     		strb	r2, [r3]
 1978 0290 91E7     		b	.L90
 1979              	.L103:
 1980 0292 C046     		.align	2
 1981              	.L102:
 1982 0294 00F80008 		.word	134281216
 1983 0298 00000000 		.word	midi_channel
 1984 029c B80B0000 		.word	3000
 1985 02a0 00000000 		.word	setChannel
 1986 02a4 204E0000 		.word	20000
 1987 02a8 00000000 		.word	UART1_rxBuffer
 1988 02ac 00000000 		.word	huart1
 1989 02b0 00000000 		.word	state1
 1990 02b4 00000000 		.word	state2
 1991 02b8 00000000 		.word	bTurnOff2
 1992 02bc 00000000 		.word	bTurnOn2
 1993 02c0 00000000 		.word	bTurnOff1
 1994 02c4 00000000 		.word	bTurnOn1
 1995              		.cfi_endproc
 1996              	.LFE391:
 1997              		.fnend
 1999              		.section	.bss._ZZ16Flash_Write_DatamPmtE15EraseInitStruct,"aw",%nobits
 2000              		.align	2
 2003              	_ZZ16Flash_Write_DatamPmtE15EraseInitStruct:
 2004 0000 00000000 		.space	16
 2004      00000000 
 2004      00000000 
 2004      00000000 
 2005              		.section	.bss._ZZ8btnStateP12GPIO_TypeDeftE5state,"aw",%nobits
 2006              		.align	1
 2009              	_ZZ8btnStateP12GPIO_TypeDeftE5state:
 2010 0000 0000     		.space	2
 2011              		.global	midi_channel
 2012              		.section	.bss.midi_channel,"aw",%nobits
 2013              		.align	3
 2016              	midi_channel:
 2017 0000 00000000 		.space	8
 2017      00000000 
 2018              		.global	midi_channel_write
 2019              		.section	.bss.midi_channel_write,"aw",%nobits
 2020              		.align	3
 2023              	midi_channel_write:
 2024 0000 00000000 		.space	8
 2024      00000000 
 2025              		.global	bytes_temp
 2026              		.section	.bss.bytes_temp,"aw",%nobits
 2027              		.align	2
 2030              	bytes_temp:
 2031 0000 00000000 		.space	4
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 56


 2032              		.global	channel
 2033              		.section	.bss.channel,"aw",%nobits
 2034              		.align	2
 2037              	channel:
 2038 0000 00000000 		.space	4
 2039              		.global	channel_write
 2040              		.section	.data.channel_write,"aw"
 2041              		.align	2
 2044              	channel_write:
 2045 0000 09000000 		.word	9
 2046              		.global	isCorrectCCChannel2
 2047              		.section	.bss.isCorrectCCChannel2,"aw",%nobits
 2050              	isCorrectCCChannel2:
 2051 0000 00       		.space	1
 2052              		.global	isCorrectCCChannel1
 2053              		.section	.bss.isCorrectCCChannel1,"aw",%nobits
 2056              	isCorrectCCChannel1:
 2057 0000 00       		.space	1
 2058              		.global	isCC
 2059              		.section	.bss.isCC,"aw",%nobits
 2062              	isCC:
 2063 0000 00       		.space	1
 2064              		.global	bTurnOff2
 2065              		.section	.bss.bTurnOff2,"aw",%nobits
 2068              	bTurnOff2:
 2069 0000 00       		.space	1
 2070              		.global	bTurnOn2
 2071              		.section	.bss.bTurnOn2,"aw",%nobits
 2074              	bTurnOn2:
 2075 0000 00       		.space	1
 2076              		.global	bTurnOff1
 2077              		.section	.bss.bTurnOff1,"aw",%nobits
 2080              	bTurnOff1:
 2081 0000 00       		.space	1
 2082              		.global	bTurnOn1
 2083              		.section	.bss.bTurnOn1,"aw",%nobits
 2086              	bTurnOn1:
 2087 0000 00       		.space	1
 2088              		.global	state2
 2089              		.section	.bss.state2,"aw",%nobits
 2092              	state2:
 2093 0000 00       		.space	1
 2094              		.global	state1
 2095              		.section	.bss.state1,"aw",%nobits
 2098              	state1:
 2099 0000 00       		.space	1
 2100              		.global	UART1_rxBuffer
 2101              		.section	.bss.UART1_rxBuffer,"aw",%nobits
 2102              		.align	2
 2105              	UART1_rxBuffer:
 2106 0000 00       		.space	1
 2107              		.global	setChannel
 2108              		.section	.bss.setChannel,"aw",%nobits
 2111              	setChannel:
 2112 0000 00       		.space	1
 2113              		.global	hdma_usart1_rx
 2114              		.section	.bss.hdma_usart1_rx,"aw",%nobits
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 57


 2115              		.align	2
 2118              	hdma_usart1_rx:
 2119 0000 00000000 		.space	92
 2119      00000000 
 2119      00000000 
 2119      00000000 
 2119      00000000 
 2120              		.global	huart1
 2121              		.section	.bss.huart1,"aw",%nobits
 2122              		.align	2
 2125              	huart1:
 2126 0000 00000000 		.space	148
 2126      00000000 
 2126      00000000 
 2126      00000000 
 2126      00000000 
 2127              		.text
 2128              	.Letext0:
 2129              		.file 3 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g030xx.h"
 2130              		.file 4 "c:\\dev\\tools\\arm-gnu-toolchain-12.2.mpacbti-bet1-mingw-w64-i686-arm-none-eabi\\arm-non
 2131              		.file 5 "c:\\dev\\tools\\arm-gnu-toolchain-12.2.mpacbti-bet1-mingw-w64-i686-arm-none-eabi\\arm-non
 2132              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 2133              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc.h"
 2134              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 2135              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 2136              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 2137              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 2138              		.file 12 "Drivers/MIDI/midi_Defs.h"
 2139              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_pwr_ex.h"
 2140              		.file 14 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h"
 2141              		.file 15 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_cortex.h"
 2142              		.file 16 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash_ex.h"
 2143              		.file 17 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 2144              		.file 18 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 2145              		.file 19 "Drivers/MIDI/midi_Namespace.h"
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 58


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:19     .text._ZL12MX_GPIO_Initv:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:24     .text._ZL12MX_GPIO_Initv:00000000 _ZL12MX_GPIO_Initv
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:134    .text._ZL12MX_GPIO_Initv:00000068 $d
.ARM.exidx.text._ZL12MX_GPIO_Initv:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:140    .text._ZL11MX_DMA_Initv:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:145    .text._ZL11MX_DMA_Initv:00000000 _ZL11MX_DMA_Initv
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:197    .text._ZL11MX_DMA_Initv:0000002c $d
.ARM.exidx.text._ZL11MX_DMA_Initv:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:203    .text._Z6turnOnP12GPIO_TypeDeftS0_tS0_t:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:209    .text._Z6turnOnP12GPIO_TypeDeftS0_tS0_t:00000000 _Z6turnOnP12GPIO_TypeDeftS0_tS0_t
.ARM.extab.text._Z6turnOnP12GPIO_TypeDeftS0_tS0_t:00000000 $d
.ARM.exidx.text._Z6turnOnP12GPIO_TypeDeftS0_tS0_t:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:307    .text._Z7turnOffP12GPIO_TypeDeftS0_tS0_t:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:313    .text._Z7turnOffP12GPIO_TypeDeftS0_tS0_t:00000000 _Z7turnOffP12GPIO_TypeDeftS0_tS0_t
.ARM.extab.text._Z7turnOffP12GPIO_TypeDeftS0_tS0_t:00000000 $d
.ARM.exidx.text._Z7turnOffP12GPIO_TypeDeftS0_tS0_t:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:411    .text._Z14displayChanneliP12GPIO_TypeDeft:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:417    .text._Z14displayChanneliP12GPIO_TypeDeft:00000000 _Z14displayChanneliP12GPIO_TypeDeft
.ARM.exidx.text._Z14displayChanneliP12GPIO_TypeDeft:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:492    .text._Z8btnStateP12GPIO_TypeDeft:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:498    .text._Z8btnStateP12GPIO_TypeDeft:00000000 _Z8btnStateP12GPIO_TypeDeft
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:552    .text._Z8btnStateP12GPIO_TypeDeft:0000002c $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2009   .bss._ZZ8btnStateP12GPIO_TypeDeftE5state:00000000 _ZZ8btnStateP12GPIO_TypeDeftE5state
.ARM.exidx.text._Z8btnStateP12GPIO_TypeDeft:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:560    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:566    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:751    .text.HAL_UART_RxCpltCallback:000000bc $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2105   .bss.UART1_rxBuffer:00000000 UART1_rxBuffer
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2062   .bss.isCC:00000000 isCC
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2056   .bss.isCorrectCCChannel1:00000000 isCorrectCCChannel1
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2086   .bss.bTurnOn1:00000000 bTurnOn1
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2125   .bss.huart1:00000000 huart1
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2050   .bss.isCorrectCCChannel2:00000000 isCorrectCCChannel2
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2074   .bss.bTurnOn2:00000000 bTurnOn2
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2080   .bss.bTurnOff1:00000000 bTurnOff1
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2068   .bss.bTurnOff2:00000000 bTurnOff2
.ARM.exidx.text.HAL_UART_RxCpltCallback:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:765    .text._Z16Flash_Write_DatamPmt:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:771    .text._Z16Flash_Write_DatamPmt:00000000 _Z16Flash_Write_DatamPmt
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:891    .text._Z16Flash_Write_DatamPmt:00000058 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2003   .bss._ZZ16Flash_Write_DatamPmtE15EraseInitStruct:00000000 _ZZ16Flash_Write_DatamPmtE15EraseInitStruct
.ARM.exidx.text._Z16Flash_Write_DatamPmt:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:897    .text._Z15Flash_Read_DatamPmt:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:903    .text._Z15Flash_Read_DatamPmt:00000000 _Z15Flash_Read_DatamPmt
.ARM.exidx.text._Z15Flash_Read_DatamPmt:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:940    .text._Z11float2BytesPhf:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:946    .text._Z11float2BytesPhf:00000000 _Z11float2BytesPhf
.ARM.exidx.text._Z11float2BytesPhf:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:999    .text._Z15Flash_Write_NUMmf:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1005   .text._Z15Flash_Write_NUMmf:00000000 _Z15Flash_Write_NUMmf
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1046   .text._Z15Flash_Write_NUMmf:00000018 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2030   .bss.bytes_temp:00000000 bytes_temp
.ARM.exidx.text._Z15Flash_Write_NUMmf:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1052   .text._Z11Bytes2floatPh:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1058   .text._Z11Bytes2floatPh:00000000 _Z11Bytes2floatPh
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 59


.ARM.exidx.text._Z11Bytes2floatPh:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1113   .text._Z14Flash_Read_NUMm:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1119   .text._Z14Flash_Read_NUMm:00000000 _Z14Flash_Read_NUMm
.ARM.exidx.text._Z14Flash_Read_NUMm:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1159   .text.Error_Handler:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1165   .text.Error_Handler:00000000 Error_Handler
    .ARM.exidx.text.Error_Handler:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1199   .text._ZL19MX_USART1_UART_Initv:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1204   .text._ZL19MX_USART1_UART_Initv:00000000 _ZL19MX_USART1_UART_Initv
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1314   .text._ZL19MX_USART1_UART_Initv:00000060 $d
.ARM.exidx.text._ZL19MX_USART1_UART_Initv:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1322   .text._Z18SystemClock_Configv:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1328   .text._Z18SystemClock_Configv:00000000 _Z18SystemClock_Configv
.ARM.exidx.text._Z18SystemClock_Configv:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1433   .text.main:00000000 $t
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1439   .text.main:00000000 main
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:1982   .text.main:00000294 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2016   .bss.midi_channel:00000000 midi_channel
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2111   .bss.setChannel:00000000 setChannel
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2098   .bss.state1:00000000 state1
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2092   .bss.state2:00000000 state2
             .ARM.exidx.text.main:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2000   .bss._ZZ16Flash_Write_DatamPmtE15EraseInitStruct:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2006   .bss._ZZ8btnStateP12GPIO_TypeDeftE5state:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2013   .bss.midi_channel:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2023   .bss.midi_channel_write:00000000 midi_channel_write
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2020   .bss.midi_channel_write:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2027   .bss.bytes_temp:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2037   .bss.channel:00000000 channel
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2034   .bss.channel:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2044   .data.channel_write:00000000 channel_write
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2041   .data.channel_write:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2051   .bss.isCorrectCCChannel2:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2057   .bss.isCorrectCCChannel1:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2063   .bss.isCC:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2069   .bss.bTurnOff2:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2075   .bss.bTurnOn2:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2081   .bss.bTurnOff1:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2087   .bss.bTurnOn1:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2093   .bss.state2:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2099   .bss.state1:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2102   .bss.UART1_rxBuffer:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2112   .bss.setChannel:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2118   .bss.hdma_usart1_rx:00000000 hdma_usart1_rx
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2115   .bss.hdma_usart1_rx:00000000 $d
C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s:2122   .bss.huart1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_unwind_cpp_pr0
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_Delay
__aeabi_unwind_cpp_pr1
HAL_GPIO_ReadPin
ARM GAS  C:\Users\Michael\AppData\Local\Temp\ccimS7vK.s 			page 60


HAL_UART_Receive_DMA
HAL_FLASH_Unlock
HAL_FLASHEx_Erase
HAL_FLASH_Program
HAL_FLASH_GetError
HAL_FLASH_Lock
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GetTick
